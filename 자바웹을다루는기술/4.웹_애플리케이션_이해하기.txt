1. 웹 애플리케이션
1) 웹 애플리케이션의 정의
- 기존의 정적인 웹 애플리케이션의 기능을 그대로 사용
- 서블릿(자바로 만든 CGI 프로그램), JSP, 자바 클래스들을 추가해 사용자에게 동적인 서비스를 제공하는 프로그램
- 정적 웹 프로그래밍 방식의 단점을 보완해 서비스를 제공하는 서버 프로그램
    - 정적 웹 애플리케이션의 기능인 HTML, 자바스크립트, CSS 등도 그대로 사용할 수 있음

2. 웹 애플리케이션의 기본 구조
- 웹 애플리케이션의 기본 디렉터리 구조
    - 웹 애플리케이션 이름
        - WEB-INF
            - classes
            - lib
            - web.xml
- 구조를 갖추지 않고 컨테이너에서 웹 애플리케이션을 실행하면 오류가 발생함
- 기본 구조 외에 다른 기능이 추가되면 디렉터리(폴더)를 추가해 사용
- 초기 웹 애플리케이션 개발 당시 구조를 개발자가 직접 만들어 사용함
- 현재는 이클립스 같은 통합 개발 환경에서 개발
- 파일 탐색기를 이용한 웹 애플리케이션 기본 구조
    (1) 탐색기에서 C 드라이브에 webShop 폴더 생성
    (2) webShop 폴더 안에 WEB-INF 폴더 생성
    (3) WEB-INF 폴더에 classes와 lib 폴더 생성
    (4) WEB-INF 폴더에 텍스트 파일 생성 후 이름을 web.xml로 변경
    (5) VS Code로 web.xml 파일 열고 코드 작성
        <?xml version="1.0" encoding="UTF-8"?>
        <web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee"
            xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
        </web-app>
        - 톰캣 8까지는 추가 필요 없지만 9버전부터는 xml 추가해야함
    - 웹 애플리케이션 구성 요소의 기능
        - webShop : 웹 애플리케이션의 루트 디렉터리, 다른 웹 애플리케이션 이름과 중복을 허용하지 않음 -> SP HTML 파일이 저장됨
        - WEB-INF : 웹 애플리케이션에 관한 정보가 저장되는 곳 -> 이 디렉터리는 외부에서 접근할 수 없음
        - classes : 웹 애플리케이션이 수행하는 서블릿과 다른 일반 클래스들이 위치하는 곳
        - lib : 웹 애플리케이션에서 사용되는 여러 가지 라이브러리 압축 파일(jar 파일)이 저장되는 곳
            - DB 연동 드라이버나 프레임워크 기능 관련 jar 파일이 여기 저장됨
            - lib 디렉터리의 jar는 클래스패스가 자동으로 설정됨
        - web.xml : 배치 지시자(deployment descriptor)로서 일종의 환경 설정 파일
            - 웹 애플리케이션에 대한 여러 가지 설정을 할 때 사용됨
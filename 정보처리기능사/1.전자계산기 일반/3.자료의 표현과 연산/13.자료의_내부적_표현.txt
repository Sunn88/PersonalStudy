1) 개요
- 자료의 내부적 표현 : 컴퓨터 내부에서 연산을 하거나 데이터를 처리할 때 사용하는 것
    - 정수 표현(고정 소수점)
        - 10진 연산
            - 언팩(존) 연산
            - 팩 연산
        - 2진 연산
            - 부호화 절대치
            - 부호화 1의 보수
            - 부호화 2의 보수
    - 실수 표현(부동 소수점)
        - 부동 소수점 방식
- 외부적 표현 방식
    - BCD(2진화 10진 코드)
    - ASCII(미국 표준화 정보 코드)
    - EBCDIC(확장 2진화 10진 코드)

2) 10진 연산
- 언팩(Unpack) 연산 = 존 10진 연산
    - 1Byte로 10진수 1자리 표현
    - 4개의 존(Zone) 비트와 4개의 숫자(Digit) 비트를 사용함
    - 최하위 바이트의 존 부분을 부호로 사용하며, 양수는 C(1100), 음수는 D(1101), 부호 없는 양수는 F(1111)로 표현
    - 연산이 불가능하며 데이터의 입/출력에 사용됨
- 팩(Pack) 연산 = 팩 10진 연산
    - 1Byte로 10진수 2자리 표현
    - 최하위 바이트의 4비트를 부호로 사용하며, 양수는 C(1100), 음수는 D(1101), 부호 없는 양수는 F(1111)로 표현함
    - 연산이 가능함

3) 2진 연산
- 2진 정수 데이터의 표현에 사용됨
- 표현할 수 있는 범위가 작지만 연산 속도가 빠름
- 첫 번째 비트를 부호 비트 -> 양수는 0, 음수는 1로 표시
- 음수 표현 방식
    - 부호화 절대치 방식
        - 부호 비트와 그 크기를 나타내는 절대값으로 표현
        - 표현 범위 : -(2^(n-1) - 1) ~ 2^(n-1) - 1
    - 부호화 1의 보수 방식
        - 부호 비트를 제외한 나머지 비트에 대해 0은 1로, 1은 0으로 변경해 표현
        - 표현 범위 : -(2^(n-1) - 1) ~ 2^(n-1) - 1
    - 부호화 2의 보수 방식
        - 1의 보수로 변환한 수 1을 더해 표현
        - 표현 범위 : -2^(n-1) ~ 2^(n-1) - 1
    - -10을 2진연산으로 표현
        - 부호화 절대치 : 0000 1010 -> 1000 1010
        - 부호화 1의 보수 : 0000 1010 -> 1111 0101
        - 부호화 2의 보수 : 0000 1010 -> 1111 0110

4) 부동 소수점 연산
- 실수 데이터 표현과 연산에 사용됨
- 숫자를 부호(1비트), 지수부(7비트), 가수부(소수부)로 나누어 표현함
- 표현 비트에 따라 단정도(4Byte), 배정도(8Byte) 실수형이 있음
- 고정 소수점 연산에 비해 실행 시간이 많이 걸리나, 매우 큰 수나 매우 작은 수를 표현하는 데 적합함
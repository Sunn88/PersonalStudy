* ★명령어의 구성, 연산자부와 자료부의 기능, 연산자부를 이용해 명령어의 개수 계산법 알아두기
* ★연산자의 기능에는 함수 연산, 자료 전다르 제어, 입출력 기능이 있음
    - 각각에는 어떠한 연산자가 있는지
    - 이항/단항 연산자 구분 문제

1) 명령어의 구성
- 컴퓨터에서 실행되는 명령어 = 연산자가 표시되는 연산자부 + 연산의 수행에 필요한 자료의 정보가 표시되는 자료부
- 연산자(Operation Code)부
    - 수행해야 할 동작에 맞는 연산자를 표시 -> OP-Code부
    - 연산자부의 크기(비트 수)는 표현할 수 있는 명령의 종류를 나타냄 -> 명령부
        - nBit일 때 최대 2^n 개의 명령어를 사용할 수 있음
    - 명령어 형식, 동작코드, 데이터 종류 등을 표시함
- 자료부(Operand)
    - 실제 데이터에 대한 정보를 표시하는 부분
    - 기억장소의 주소, 레지스터 번호, 사용할 데이터, 명령어 순서 등 표시 -> 주소부
- 연산자부에 더하라는 연산자가 들어 있으면 자료부에는 더할 자료의 실제 값이나 실제 값이 저장된 기억장소의 주소가 들어 있음

2) 연산자(Operation Code)의 기능
- 함수 연산 기능
    - 산술 연산 : ADD, SUB, MUL, DIV, 산술 Shift 등
    - 논리 연산 : NOT, AND, OR, XOR, 논리적 Shift, Rotate, Complement, Clear 등
    - 피연산자 수에 따른 연산자의 분류
        - 단항 연산자 : NOT A처럼 피연산자가 1개만 필요한 연산자 -> NOT, Complement, Shift, Rotate, MOVE 등
        - 이항 연산자 : A + B처럼 피연산자가 2개 필요한 연산자 -> 사칙 연산, AND, OR, XOR, XNOR 등
- 자료 전달 기능 : CPU와 기억장치 사이에서 정보를 교환하는 기능
    - Load : 기억장치에 기억되어 있는 정보를 CPU로 꺼내오는 명령
    - Store : CPU에 있는 정보를 기억장치에 기억시키는 명령
- 제어 기능 : 명령의 실행 순서를 변경시킬 때 사용하는 명령
    - 무조건 분기 명령 : GOTO, Jump(JMP) 등
    - 조건 분기 명령 : IF 조건
- 입출력 기능 : CPU와 I/O 장치, 또는 메모리와 I/O 장치 사이에서 자료 전달하는 기능

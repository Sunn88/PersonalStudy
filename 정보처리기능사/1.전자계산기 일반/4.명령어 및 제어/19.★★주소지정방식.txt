* 주소지정방식 : 프ㄴㅇ그램이 수행되는 동안 사용될 데이터의 위치를 지정하는 방법
* ★주소지정방식에는 어떠한 것들이 있는지 파악, 각 주소지정방식의 특징은 이름을 통해 이해하기
    - 암시적 : 주소를 지정하지 않고 암시함
    - 즉차주소 : 주소 대신 즉시 사용할 수 있는 값이 들어있음
    - 직접주소 : 자료가 들어 있는 곳을 직접 지정함
    - 간접주소 : 주소가 지정하는 곳에 실제 데이터가 들어 있는 도 달느 주소가 들어 있음
        - 주소를 거쳐 실제 데이터를 참조함
* 계산에 의한 주소지정방식의 개념과 특징, 명령어의 주소 부분과 프로그램 카운터의 내용이 더해져 상대 주소가 결정됨
* 절대 주소의 개념을 묻는 문제가 종종 나옴 -> 절대 주소와 상대 주소 구분하기

1) 접근 방식에 따른 분류
- 암시적 주소지정방식(Implied Mode)
    - 주소를 지정하는 필드가 없는 0번지 명령어에서 Stack의 Top 포인터가 가리키는 Perand를 암시해 이용함
- 즉치(즉시)적 주소지정방식(Immediate Mode)
    - 명령어 자체에 오퍼랜드(실제 데이터)를 가지고 있는 방식
    - 메모리 참조 횟수 : 0
    - 별도의 기억장소를 엑세스하지 않고 CPU에서 곧바로 자료를 이용할 수 있어 실행 속도가 빠름
- 직접 주소지정방식(Direct Mode)
    - 명령의 주소부(Operand)에 있는 값이 실제 데이터가 기억된 번지를 지정하는 방식
    - 메모리 참조 횟수 : 1회
- 간접 주소지정방식(Indirect Mode)
    - 명령어의 주소부가 지정하는 곳에 있는 값이 실제 데이터를 기억하는 또 다른 메모리의 번지를 지정하는 방식
    - 메모리 참조 횟수 : 2회 이상

2) 계산에 의한 주소지정방식
- 주소부(Operand)와 CPU의 특정 레지스터의 값이 더해져서 유효 주소를 계산하는 방식
- 대부분 주소의 일부분을 생략하는 약식주소
- 사용하는 레지스터의 종류에 따라 구분
    - 상대 주소(Relative Mode)
        - 유효 주소 : 명령어의 주소 부분(Operand) + PC(Program Coutner)
        - 명령어 자신의 기억장소를 기준으로 해 데이터의 위치를 지정하는 방식
    - 베이스 레지스터(Base Register Mode)
        - 유효 주소 : 명령어의 주소 부분 + Base Register
        - 프로그램을 재배치(Relocation)할 때 사용
    - 인덱스 레지스터(Index Register Mode)
        - 유효 주소 : 명령어의 주소 부분 + Index Register
        - 주소지정에 2개의 레지스터를 사용하는 방식
        - 순차적인 주소지정에 유리함

3) 실제 기억공간 주소에 따른 구분
- 절대 주소(Absolute Address)
    - 임의의 기억장소에 대한 실제 주소(유효주소)
    - 맨 처음부터 1Byte마다 0, 1, 2, 3, ...의 순서로 16진수의 번호가 차례대로 저장됨
    
* AND(삭제 연산), OR(삽입, 1로 세트), XOR(비교, 반전), NOT(보수), 논리 Shoft(데이터 직렬 전송), ROTATE(문자 위치 변환), MOVE(자료 이동 연산)

1) AND(Masking Operation)
- 특정 문자 또는 특정 비트를 삭제(Clear)시키는 연산 -> Masking 연산
- 삭제할 부분의 비트를 0과 AND시켜 삭제함
    - 대응시키는 0인 비트를 Mask Bit라 함

2) OR(Selective-Set)
- 특정 문자를 삽입하거나 특정 비트에 1을 세트시키는 연산 -> Selective Set 연산
- 삽입하거나 세트시킬 비트에 삽입할 문자 코드 또는 1을 OR 연산시킴

3) XOR(Compare, 비교)
- 두 개의 데이터를 비교하거나 특정 비트를 반전시킬 때 사용함
- 두 개의 데이터를 XOR 연산해 결과에 1Bit라도 1이 있으면 서로 다른 데이터임
- 반전시킬 때는 반전시킬 비트와 1을 XOR시킴

4) NOT(Complement, 보수)
- 각 비트의 값을 반전시키는 연산
- 보수를 구할 때 사용

5) 논리Shift
- 왼쪽 또는 오른족에서 1Bit씩 자리를 이동시키는 연산
- 데이터의 직렬 전송(Serial Transfer)에 사용함
- 삽입되는 자리는 무조건 0

6) Rotate
- Shift에서 밀려나가는 비트의 값을 반대편 값으로 입력하는 연산
- 문자 위치를 변환할 때 사용함

7) Move
- 레지스터에 기억된 자료를 그대로 다른 레지스터로 옮길 때 사용
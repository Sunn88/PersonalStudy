* UNIX의 전반적인 특징은 묻는 문제가 종종 나옴
* ★UNIX 시스템의 구성 중 커널과 쉘의 기능을 묻는 문제가 자주 나옴
* i-node의 개념과 i-node에 포함되는 정보를 구분하는 문제가 출제됨

1) UNIX의 특징
- 주소 서버용 컴퓨터에서 사용되는 운영체제
- 시분할 시스템(Time Sharing system)을 위해 설계된 대화식 운영체제
- 소스가 공개된 개방형 시스템(Open System)
- 대부분 C언어로 작성되어 있어 이식성이 높으며 장치, 프로세스 간의 호환성이 높음
- 크기가 작고 이해하기 쉬움
- 다중 사용자(Multi-User), 다중 작업(Multi-Tasking) 지원
- 많은 네트워킹 기능 제공 -> 통신망(Network) 관리용 운영체제로 적합함
- 계층적 트리 구조의 파일 시스템 가짐
- UNIX 파일 시스템의 파일 형식 : 일반 파일, 디렉터리 파일, 특수 파일
    - 일반 파일(Regular File)
    - 디렉터리 파일(Directory File) : 파일 이름들의 목록과 파일들이 디스크의 어디에 위치하는지를 나타내는 정보를 가진 파일
    - 특수 파일(Special File) : 주변 장치를 접근/관리하고, 프로세스 간 상호 통신에 대한 정보를 가지고 있는 파일
- 표준 입/출력을 통해 명령어들이 파이프라인으로 연결됨

2) UNIX 시스템의 구성
- 커널(Kernel)
    - UNIX의 가장 핵심적인 부분
    - 컴퓨터가 부팅될 떄 주기억장치에 적재된 후 상주하면서 실행됨
    - 하드웨어를 보호하고, 프로그램과 하드웨어 간의 인터페이스 역할 담당
    - 하드웨어와 프로세스의 보안 책임
    - 프로세스(CPU 스케줄링) 관리, 기억장치 관리, 파일 관리, 입출력 관리, 데이터 전송 및 변환 등 여러 가지 기능 수행
- 쉘(Shell)
    - 사용자의 명령어를 인식해 프로그램을 호출하고 명령을 수행하는 명령어 해석기
    - 명렁을 해석해 커널로 처리할 수 있도록 전달해주는 명령 인터프리터
    - 단말장치를 통해 사용자로부터 명령어를 입력받음
    - DOS의 COMMAND.COM과 같은 기능 수행
    - 주기억장치에 상주하지 ㅇ낳고, 명령어가 포함된 파일 형태로 존재하며 보조기억장치에서 교체 처리가 가능함
    - 공용 Shell(Bourne Shell, C Shell, Korn Shell)이나 사용자 자신이 만든 Shell 사용 가능
        - Bourne Shell
            - 프로그래밍의 크기가 작아서 시스템의 자원을 많이 소비하지 않고 실행이 빨라 프로그래밍에 적합함
            - UNIX 시스템의 최초의 Shell
            - 기본 프롬프트 : $
        - C Shell
            - 대부분 가장 많이 사용되는 Shell -> C언어와 유사함
            - 기본 프롬프트 : %
        - Korn Shell
            - Bourne Shell을 기반으로 C Shell의 기능을 추가한 것
    - Utility Program
        - 일반 사용자가 작성한 응용 프로그램을 처리하는 데 사용함
        - DOS에서의 외부 명령어에 해당됨
        - 에디터, 컴파일러, 인터프리터, 디버거 등

3) UNIX 파일 시스팀
- 계층적 트리 구조 가짐
- 구조는 디스크를 블록으로 분류해 배치한 구조
    - 부트 블록(Boot Block) : 부팅 시 필요한 코드를 저장하고 있는 블록
    - 슈퍼 블록(Super Block) : 전체 파일 시스템에 대한 정보를 저장하고 있는 블록
    - I-noded(Index node) 블록
        - UNIX에서 파일 및 디렉터리를 관리하기 위해 사용되는 자료 구조
        - 각 파일이나 디렉터리에 대한 모든 정보를 저장함
    - 데이터 블록 : 디렉터리별로 디렉터리 엔트리와 실제 파일에 대한 데이터가 저장된 블록
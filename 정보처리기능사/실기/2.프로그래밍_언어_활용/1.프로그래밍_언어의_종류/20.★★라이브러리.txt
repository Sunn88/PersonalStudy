* C언어는 라이브러리를 헤더 파일로 제공함
* Java와 Python은 패키지로 제공함
* 대표적인 표준 라이브러리들의 종류와 개별적인 기능 정리하기

1) 라이브러리의 개념
- 프로그램을 효율적으로 개발할 수 있도록 자주 사용하는 함수나 데이터들을 미리 만들어 모아 놓은 집합체
- 자주 사용하는 함수들의 반복적인 코드 작성을 피하기 위해 미리 만들어 놓은 것
- 필요할 떄는 언제든지 호출해 사용 가능
- 표준 라이브러리 : 프로그래밍 언어에 기본적으로 포함되어 있는 라이브러리
    - 여러 종류의 모듈이나 패키지 형태
        - 모듈 : 하나의 기능이 한 개의 파일로 구현된 형태
        - 패키지 : 하나의 패키지 폴더 안에 여러 개의 모듈을 모아 놓은 형태
- 외부 라이브러리 : 개발자들이 필요한 기능들을 만들어 인터넷 등에 공유해 놓은 것
    - 외부 라이브러리를 다운받아 설치한 후 사용

2) C언어의 주요 표준 라이브러리
- 라이브러리를 헤더 파일로 제공함
- 각 헤더 파일에는 응용 프로그램 개발에 필요한 함수들이 정리되어 있음
- 헤더 파일 사용 시 '#include <stdio.h>'와 같이 include문을 이용해 선언 후 사용해야 함
    - stdio.h
        - 데이터의 입출력에 사용되는 기능 제공
        - 주요 함수 : printf(), scanf(), fprintf(), fscanf(), fclose(), fopen() 등
    - math.h
        - 수학 함수 제공
        - 주요 함수 : sqrt(), pow(), abs(), log() 등
    - string.h
        - 문자열 처리에 사용되는 기능 제공
        - 주요 함수 : strlen(), strcpy(), strcmp() 등
    - stdlib.h
        - 자료형 변환, 난수 발생, 메모리 할당에 사용되는 기능 제공
        - 주요 함수 : atoi(), atof(), srand(), rand(), free() 등
    - time.h
        - 시간 처리에 사용되는 기능 제공
        - 주요 함수 : time(), clock() 등

3) Java의 주요 표준 라이브러리
- 라이브러리를 패키지에 포함헤 제공함
- 각 패키지에는 Java 응용 프로그램 개발에 필요한 메소드들이 클래스로 정리되어 있음
- 패키지를 사용하려면 'import java.util'과 같이 import문을 이용해 선언 후 사용해야 함
    - java.lang
        - Java에 기본적으로 필요한 인터페이스, 자료형, 예외 처리 등에 관련된 기능 제공
        - import문 없이도 사용할 수 있음
        - 주요 클래스 : String, System, Process, Runtime, Math, Error 등
    - java.util
        - 날짜 처리, 난수 발생, 복잡한 문자열 처리 등에 관련된 기능 제공
        - 주요 클래스 : Date, Calender, Random, StringTokenizer 등
    - java.io
        - 파일 입출력과 관련된 기능 및 프로토콜 제공
        - 주요 클래스 : InputStream, OutputStream, Reader, Writer 등
    - java.net
        - 네트워크와 관련된 기능 제공
        - 주요 클래스 : Socket, URL, InetAddress 등
    - java.awt
        - 사용자 인터페이스(UI)와 관련된 기능을 제공함
        - 주요 클래스 : Frame, Panel, Dialog, Button, Checkbox 등

4) Java의 주요 메소드
- String
    - A.compareTo(B) : 숫자로 된 문자열 A와 B를 비교해 같으면 0, A가 크면 1, B가 크면 -1 반환
    - A.equals(B) : 대소문자를 구분해 문자열 A와 B를 비교한 후 같으면 참, 다르면 거짓 반환
    - A.equalsIgnoreCase(B) : 대소문자 구분없이 문자열 A와 B를 비교한 후 같으면 참 다르면 거짓 반환
    - toLowerCase(문자열) : 문자열을 모두 소문자로 변환함
    - toUpperCase(문자열) : 문자열을 모두 대문자로 변환함
    - split(구분자) : 지정된 구분자로 문자열을 구분해 분리함
    - replaceAll(변환 대상, 변환할 문자) : 변환 대상을 변환할 문자로 치환함
    - A.substring(위치) : 문자열 A에서 지정한 위치를 포함한 이후의 모든 문자열을 반환함
    - A.charAt(위치) : 문자열 A에서 위치에 해당하는 문자 반환
    - A.length() : 문자열 A의 길이 반환
    - A.trim() : 문자열 A의 좌우 공백 제거
    - getNumericValue() : 숫자 형태의 문자열을 정수형으로 변환
        - 숫자 형태가 아닌 문자열인 경우 -1 반환
        - 분수처럼 정수형으로 표현할 수 없는 문자열인 경우 -2 반환
- StringTokenizer
    - countTokens() : StringTokenized 객체의 토큰 개수 반환
    - hasMoreTokens() : StringTokenizer 객체에 반환할 토큰이 있으면 참, 없으면 거짓 반환
    - nextToken() : StringTokenizer 객체에서 차례로 토큰을 가져와 반환함

5) Python의 주요 표준 라이브러리
- Java와 동일하게 라이브러리를 패키지로 제공함
- 패키지에는 응용 프로그램 개발에 필요한 클래스와 메소드들이 정의되어 있음
- Java는 표준 라이브러리에 여러 패키지가 포함되어 있지만, Python은 표준 라이브러리라는 하나의
    패키지만 존재함
- 라이브러리를 사용하려면 'import random'과 같이 선언하고, 사용할 때는 패키지가 아닌
    각 클래스를 호출, 마침표로 구분
    - 내장 함수
        - Python에 기본적인 인터페이스
        - import문이나 클래스명 없이도 사용할 수 있음
        - 주요 메소드 : abs(), slice(), pow(), print() 등
    - os
        - 운영체제와 상호 작용하기 위한 기능 제공
        - 주요 메소드 : getcwd(), chdir(), system() 등
    - re
        고급 문자열 처리를 위한 기능 제공
        - 주요 메소드 : findall(), sub() 등
    - math
        - 복잡한 수학 연산을 위한 기능 제공
        - 주요 메소드 : cos(), log() 등
    - random
        - 무작위 선택을 위한 기능 제공
        - 주요 메소드 : choice(), sample(), random(), randrange() 등
    - statistics
        - 통계갑 산출을 위한 기능 제공
        - 주요 메소드 : mean(), median(), variance() 등
    - datetime
        - 날짜와 시간 조작을 위한 기능 제공
        - 주요 메소드 : today(), date(), strftime() 등

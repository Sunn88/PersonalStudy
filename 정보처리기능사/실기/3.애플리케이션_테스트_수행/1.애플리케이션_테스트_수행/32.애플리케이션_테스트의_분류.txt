* 애플리케이션 테스트는 테스트 시 프로그램의 실행 여부 또는 진행 목적 등에 따라 다양하게 분류됨
* 각각에 해당하는 테스트 종류를 서로 구분할 수 있을 정도로 정리하기

1) 프로그램 실행 여부에 따른 테스트
- 정적 테스트
    - 프로그램을 실행하지 않고 명세서나 소스 코드를 대상으로 분석하는 테스트
    - 소프트웨어 개발 초기에 결함을 발견할 수 있어 소프트웨어의 개발 비용을 낮추는 데 도움이 됨
    - 종류 : 워크스루, 인스펙션, 코드 검사 등
        - 워크스루(Walkthrough, 검토 회의)
            - 소프트웨어 개발자의 작업 내역을 개발자가 모집한 전문가들ㅇ; 검토하는 것
            - 소프트웨어 검토를 위해 미리 준비된 자료를 바탕으로 정해진 절차에 따라 평가함
            - 오류의 조기 검출을 목적으로 하며 발견된 오류는 문서화함
        - 인스펙션
            - 워크스루를 발전시킨 형태
            - 소프트웨어 개발 단계에서 산출된 결과물의 품질을 평가함
            - 이를 개선하기 위한 방법 등을 제시함
- 동적 테스트
    - 프로그램을 실행해 오류를 찾는 테스트
    - 소프트웨어 개발의 모든 단계에서 테스트를 수행할 수 있음
    - 종류 : 블랙박스 테스트, 화이트박스 테스트

2) 테스트 기반(Test Bases)에 따른 테스트
- 명세 기반 테스트
    - 사용자의 요구사항에 대한 명세를 빠짐없이 테스트 케이스로 만들어 구현하고 있는지 확인하는 테스트
        - 테스트 케이스 : 구현된 소프트웨어가 사용자의 요구사항을 정확하게 준수했는지 확인하기 위해
            설계된 입력 값, 실행 조건, 기대 결과 등으로 구성된 테스트 항목에 대한 명세서
    - 종류 : 동등 분할, 경계 값 분석 등
- 구조 기반 테스트
    - 소프트웨어 내부의 논리 흐름에 따라 테스트 케이스를 작성하고 확인하는 테스트
    - 종류 : 구문 기반, 결정 기반, 조건 기반
- 경험 기반 테스트
    - 유사 소프트웨어나 기술 등에 대한 테스터의 경험을 기반으로 수행하는 테스트
    - 사용자의 요구사항에 대한 명세가 불충분하거나 테스트 시간에 제약이 있는 경우 효과적
    - 종류 : 에러 추정, 체크 리스트, 탐색적 테스팅

3) 시각에 따른 테스트
- 검증(Verification) 테스트
    - 개발자의 시작에서 제품의 생산 과정을 테스트
    - 제품이 명세서대로 완성됐는지를 테스트
- 확인(Validation) 테스트
    - 사용자의 시각에서 생산된 제품의 결과 테스트
    - 사용자가 요구한대로 제품이 완ㅅ겅됐는지, 제품이 정상적으로 동작하는지 테스트

4) 목적에 따른 테스트
- 회복(Recovery) 테스트
    - 시스템에 여러 가지 결함을 줘 실패하도록 한 후 올바르게 복구되는지 확인
- 안전(Security) 테스트
    - 시스템에 설치된 시스템 보호 도구가 불법적인 침입으로부터 시스템을 보호할 수 있는지 확인
- 강도(Stress) 테스트
    - 시스템에 과도한 정보량이나 빈도 등을 부과해 과부하 시에도 소프트웨어가 정상적으로 실행되는지 확인
- 성능(Performance) 테스트
    - 소프트웨어의 실시간 성능이나 전체적인 효율성을 진단
    - 소프트웨어의 응답 시간, 처리량 등을 테스트
- 구조(Structure) 테스트
    - 스포트웨어 내부의 논리적인 경로, 소스 코드의 복잡도 등을 평가
- 회귀(Regression) 테스트
    - 소프트웨어의 변경 또는 수정된 코드에 새로운 결함이 없음을 확인
- 병행(Parallel) 테스트
    - 변경된 소프트웨어와 기존 소프트웨어에 동일한 데이터를 입력해 결과를 비교
* 블랙박스 테스트와 화이트박스 테스트의 개념, 차이점, 종류 등 모두 숙지하기

1) 화이트박스 테스트(White Box Test)
- 모듈의 원시 코드를 오픈시킨 상태에서 원시 코드의 논리적인 모든 경로를 테스트해 테스트 케이스를
    설계하는 방법
- 설계된 절차에 초점을 둔 구조적 테스트
- 프로시저 설계의 제어 구조를 사용해 테스트 케이스 설계, 테스트 과정의 초기에 적용
- 모듈 안의 작동을 직접 관찰함
- 원시 코드(모듈)의 모든 문장을 한 번 이상 실행함으로써 수행됨
- 프로그램의 제어 구조에 따라 선택, 반복 등의 분기점 부분들을 수행함으로써 논리적 경로를 제어함

2) 화이트박스 테스트의 종류
- 기초 경로 검사
    - 대표적인 화이트박스 테스트 기법
    - 테스트 케이스 설계자가 절차적 설계의 논리적 복잡성을 측정할 수 있게 해주는 테스트 기법
    - 테스트 측정 결과는 실행 경로의 기초를 정의하는 데 지침으로 사용됨
- 제어 구조 검사
    - 조건 검사(Condition Testing)
        - 프로그램 모듈 내에 있는 논리적 조건을 테스트하는 테스트 케이스 설계 기법
    - 루프 검사(Loop Testing)
        - 프로그램의 반복 구조에 초점을 맞춰 실시하는 테스트 케이스 설계 기법
    - 데이터 흐름 검사(Data Flow Testing)
        - 프로그램에서 변수의 정의와 변수 사용의 위치에 초점을 맞춰 실시하는 테스트 케이스 설계 기법

3) 화이트박스 테스트의 검증 기준
- 문장 검증 기준(Statement Coverage)
    - 소스 코드의 모든 구문이 한 번 이상 수행되도록 테스트 케이스 설계
- 분기 검증 기준(Branch Coverage)
    - 결정 검증 기준(Decision Coverage)이라고도 불림
    - 소스 코드의 모든 조건문에 대해 조건식이 True인 경우와 False인 경우가 한 번 이상 수행되도록
        테스트 케이스 설계
- 조건 검증 기준(Condition Coverage)
    - 소스 코드의 조건문에 포함된 개별 조건식의 결과가 True인 경우와 False인 경우가 한 번 이상
        수행되도록 테스트 케이스 설계
- 분기/조건 기준(Branch/Condition Coverage)
    - 분기 검증 기준과 조건 검증 기준을 모두 만족하는 설계
    - 조건문이 True인 경우와 False인 경우에 따라 조건 검증 기준의 입력 데이터를 구분하는
        테스트 케이스 설계
- 검증 기준의 종류
    - 기능 기반 커버리지 : 실제 테스트가 수행된 기능의 수/전체 기능의 수
    - 라인 커버리지 : 테스트 시나리오가 수행한 소스 코드의 라인 수/전체 소스 코드의 라인 수
    - 코드 커버리지 : 소스 코드의 구문, 분기, 조건 등의 구조 코드 자체게 얼마나 테스트 되었는지를
        측정하는 방법

4) 블랙박스 테스트(Black Box Test)
- 소프트웨어가 수행할 특정 기능을 알기 위해 각 기능이 완전히 작동되는 것을 입증하는 테스트
- 사용자의 요구사항 명세를 보면서 테스트함
- 주로 구현된 기능을 테스트
- 소프트웨어 인터페이스에서 실시되는 테스트
- 부정확하거나 누락된 기능, 인터페이스 오류, 자료 구조나 외부 데이터베이스 접근에 따른 오류, 
    행위나 성능 오류, 초기화와 종료 오류 등을 발견하기 위해 사용됨
- 테스트 과정의 후반부에 적용됨

5) 블랙박스 테스트의 종류
- 동치 분할 검사(Equivalence Partitioning Testing)
    - 입력 자료에 초점을 맞춰 테스트 케이스를 만들고 검사하는 방법
    - 동등 분할 기법이라고도 함
    - 프로그램의 입력 조건에 타당한 입력 자료와 타당하지 않은 입력 자료의 개수를 균등하게 해
        테스트 케이스를 정하고, 해당 입력 자료에 맞는 결과가 출력되는지 확인하는 기법
- 경계값(한계값) 분석(Boundary Value Analysis)
    - 입력 자료에만 치중한 동치 분할 기법을 보완하기 위한 기법
    - 입력 조건의 중간값보다 경계값에서 오류가 발생될 확률이 높다는 점을 이용해 입력 조건의 경계값을
        테스트 케이스로 선정해 검사하는 기법
- 원인-효과 그래프 검사(Cause-Effect Graphing Testing)
    - 입력 데이터 간의 관계와 출력에 영향을 미치는 상황을 체계적으로 분석한 다음 효용성이 높은
        테스트 케이스를 선정해 검사하는 기법
- 오류 예측 검사(Error Guseeing)
    - 과거의 경험이나 확인자의 감각으로 테스트하는 기법
    - 달느 블랙 박스 테스트 기법으로는 찾아낼 수 없는 오류를 찾아내는 일련의 보충적 검사 기법
    - 데이터 확인 검사라고도 함
- 비교 검사(Comparison Testing)
    - 여러 버전의 프로그램에 동일한 테스트 자료를 제공해 동일한 결과가 출력되는지 테스트하는 기법
* 결함 조치 관리에 사용되는 코드 인스펙션과 형상 관리가 무엇인지 확실히 파악하기
* 코드 인스펙션은 단순히 코드를 검토하는 것뿐만 아니라 여러 사람이 모여 회의를 수행하고 결함을
    수정하고 보고서를 작성하는 과정 모두를 포함함
* 코드 인스펙션의 시작 단계에서 수행하는 자동 인스펙션 또는 수동 인스펙션과 혼동하지 않도록 주의하기

1) 결함 조치 관리의 개요
- 결함 조치 관리 : 결함이 발생한 코드에서 결함을 제거하고 결함 조치로 변경된 코드의 버전과 이력을
    관리하는 것
- 결함 제거는 코드 인스펙션을 통해 수행되며, 이를 통해 수정된 코드의 버전과 이력을 관리하는 것을
    형상 관리라고 함

2) 코드 인스펙션(Code Inspection)
- 코드의 결함을 파악하고 제거하기 위해 개발 가이드의 준수 여부를 확인하는 것
- 코드 인스펙션은 기능적으로 이상이 없는 코드를 대상으로 함
- 적절히 수행할 경우 코드에 포함된 에러의 90%까지 찾아낼 수 있음
- 프로젝스 수행 단계 전체에 걸친 리소스의 절감과 그에 따른 비용 감소, 품질 향상을 기대할 수 있음
- 다른 개발자가 기술 습득 및 차후 코딩 시 유념할 점 등을 학습할 수 있어 재공학이 가능한 영역을
    식별하는 데 도움을 줌
    - 재공학(Re-Engineering) : 제품이 완성된 후 결함을 수정하거나, 개선을 위해 시스템을 수정하는 프로세스
- 코드 인스펙션 시작 단계에서는 대상 코드에 대한 사전 검토(Inspection) 작업을 수행함
- 코드의 사전 검토 방법
    - 자동 인스펙션
        - 애플리케이션에 적합한 코드 인스펙션 도구를 활용해 검토하는 기법
    - 수동 인스펙션
        - 코드를 추출해 직접 검토하는 기법
        - 수동 인스펙션을 수행하는 경우
            - 자동 인스펙션의 결과로 에러가 많이 검출된 경우
            - 자동 인스펙션으로 검토가 어려운 복잡한 처리 로직이 있는 경우
            - 처음 투입되는 개발자의 코드가 코드 인스펙션의 대상이 된 경우

3) 코드 인스펙션의 수행 절차
    (1) 범위 계획(Capacity Plan) : 인스펙션할 코드의 선정 기준과 범위를 결정
    (2) 시작(Overview) : 자동 인스펙션 또는 수동 인스펙션 수행
    (3) 준비(Preparation) : 계획서 및 체크리스트를 작성, 관련자에게 일정 공지 후 산출물 준비
    (4) 인스펙션 회의(Inspection Meeting) : 사전 검토 및 회의를 실시한 후 결과서 작성
    (5) 재작업(Rework) : 코드 작성자가 직접 시정 조치 후 인스펙션 진행자가 결과 확인
    (6) 후속 처리(Follow-up) : 결과 분석서 작성 및 보고

4) 형상 관리(SCM; Software Configuration Management)
- 소프트웨어의 개발 과정에서 소프트웨어의 변경 사항을 관리하기 위해 개발된 일련의 활동
- 소프트웨어 변경의 원인을 알아내고 제어하며, 적절히 변경되고 있는지 확인해 해당 담당자에게 통보함
- 형상 관리는 소프트웨어 개발의 전 단계에 적용되는 활동이며, 유지보수 단계에서도 수행됨
- 형상 관리는 소프트웨어 개발의 전체 비용을 줄이고, 개발 과정의 여러 방해 요인이 최소화되도록
    보증하는 것을 목적으로 함
- 형상 관리의 대상이 되는 소프트웨어 형상 항목(SCI; Software Configuration Item)
    - 계획 단계 : 시스템 명세서, 개발 계획서, 품질평가 계획서, 개발 표준 및 절차 매뉴얼 등
    - 요구 분석 단계 : 자료 흐름도, 자료 사전 등
    - 설계 단계 : 입출력 명세서, 화면 설계서, 초기 사용자 매뉴얼, 시스템 구조도 등
    - 구현 단계 : 원시 코드, 목적 코드, 실행 코드, 단위 시험 보고서 등
    - 시스템 통합 및 시험 단계 : 통합 시험 보고서, 기능/성능/과부하 시험 보고서 등
    - 설치 및 운영 단계 : 목적/실행 코드, 운영자 매뉴얼, 사용자 매뉴얼 등

5) 형상 관리의 기능
- 형상 식별 : 형상 관리 대상에 이름과 관리 번호를 부여하고, 계층(Tree) 구조로 구분해 수정 및
    추적이 용이하도록 하는 작업
- 버전 제어(버전 관리) : 소프트웨어 업그레이드나 유지 보수 과정에서 생성된 다른 버전의 형상 항목을
    관리하고, 이를 위해 특정 절차와 도구(Tool)를 결합시키는 작업
- 형상 통제(변경 관리) : 식별된 형상 항목에 대한 변경 요구를 거토애 현재의 기준선(Base Line)이
    잘 반영될 수 있도록 조정하는 작업
    - 기준선(변경 통제 시점) : 정식으로 검토되고 합의된 명세서나 제품으로, 소프트웨어 개발 시
        소프트웨어 변경을 적절히 제어할 수 있도록 도와줌
- 형상 감사 : 기준선의 무결성을 평가하기 위해 확인, 검증, 검열 과정을 통해 공식적으로 승인하는 작업
    - 무결성 : 결점이 없다는 것으로, 정해진 기준에 어긋나지 않고 조건을 충실히 만족하는 정도
- 형상 기록(상태 보고) : 형상의 식별, 통제, 감사 작업의 결과를 기록/관리하고 보고서를 작성하는 작업
1. 연산자의 종류와 우선순위
 - 연산자 : 특정한 연산을 수행하기 위해 사용하는 기호
 - 사용 목적에 따라 구분됨
 - 연산의 대부분은 왼 -> 오로 실행하지만, 단항 연산자와 대입 연산자 등은 오 -> 왼으로 실행함
 - 여러 종류의 연산자가 하나의 식에 있으면 우선순위에 따라 연산 순서가 결정됨
    -> 최우선 연산자([], (), ...) > 단항 > 산술 > 쉬프트 > 비교 > 논리 > 삼항 > 대입
    
2. 산술 연산자
 - 산술 연산자 : 상수 또는 변수 등을 이용해 사칙 연산과 나머지 연산을 하는 연산자
                        c = a + b : 변수 c에 a와 b의 더한 결과 값을 대입
                        c = a - b : 변수 c에 a에서 b를 뺀 결과 값을 대입
                        c = a * b : 변수 c에 a와 b를 곱한 결과 값을 대입
                        c = a / b : 변수 c에 a를 b로 나눈 결과 값을 대입
                        c = a % b : 변수 c에 a를 v로 나눈 나머지를 대입 -> 데이터 타입이 정수형인 경우에만 사용
                        
3. 단항 연산자
 - 단항 연산자 : 항이 하나인 연산자
1) 부호 연산자 : 변수 앞에 붙어 피연산자의 부호를 결정해주거나 부호를 변경하는 역할
2) 논리 부정 연산자 : ! :  true를 false로, false를 true로 바꾸는 연산자
3) 증감 연산자 : ++, -- : 변수에 저장된 값을 1 증가시키거나 1 감소시키는 연산자
                         변수의 앞에 붙으면 변수가 사용되기 전 값을 증감
                         변수의 뒤에 붙으면 변수가 사용된 후 값을 증감

4. 비교 연산자
 - 비교 연산자 : 양변을 비교하여 같으면 true, 다르면 false를 반환하는 연산자
1) 대소비교 연산자 : 실제 부등호의 방향이 결과와 일치하면 true, 다르면 false를 반환
2) 등가비교 연산자 : 양 변이 같은지 다른지 비교하여 true/false를 반환
                                자바에서 문자열을 비교하고 싶을 떄는 equals() 메소드 사용
                                
5. 논리 연산자
 - 논리 연산자 : 여러 가지 조건을 동시에 검사할 때 사용하는 연산자
                         a && b : AND : a가 true이고 b가 true면 true 반환
                         a || b : OR : a 또는 b 중 하나라도 true면 true 반환
                         !a : NOT : a가 true면 false 반환, false면 true 반환
                         a ^ b : XOR : a와 b가 서로 다르면 true, 같으면 false 반환
                         
6. 기타 연산자
1) 삼항 연산자 : 항이 세 개인 연산자 -> 조건식의 true/false 여부에 따라 각각 다른 결과를 반환
                         (조건) ? (항목1) : (항목2)
                         조건 : true/false로 구분할 수 잇는 비교 연산, 논리 연산 등
                         항목1 : 조건이 true인 경우 실행할 연산이나 함수 등
                         항목2 : 조건이 false인 경우 실행할 연산이나 함수 등
2) 대입 연산자 : 값을 할당하는 데 사용
                          a = 1 : 변수 a에 1을 기억
                          a += 1 : 변수 a에 1을 더하여 다시 a에 기억 (a = a + 1)
                          a -= 1 : 변수 a에서 1을 뺀 후 다시 a에 기억 (a = a - 1)
                          a *= 1 : 변수 a에 1을 곱한 수 다시 a에 기억 (a = a * 1)
                          a /= 1 : 변수 a를 1로 나눈 후 몫을 다시 a에 기억 (a = a / 1)
                          a %= 1 :  변수 a를 1로 나눈 나머지를 a에 기억 (a = a % 1)
                          b = a : 순수 대입 : b라는 변수에 a에 있는 값을 대입
3) instanceof : 객체의 타입을 확인하는 연산 -> 주로 조건문에서 사용
                        instanceof 왼쪽에는 참조변수를, 오른쪽에는 클래스명을 두고 연산
                        결과가 true인 경우 해당 참조변수는 검사한 타입으로 형변환이 가능
 
                         
 
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                         
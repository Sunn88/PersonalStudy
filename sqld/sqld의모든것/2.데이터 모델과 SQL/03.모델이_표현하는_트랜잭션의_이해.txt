- 데이터베이스에 데이터를 삽입/수정/삭제할 때 이것이 원자적으로 하나의 단위로 실행되어야 데이터의 정합성이 깨지지 않음
    - 원자적 : 더 이상 쪼개질 수 없는 단위 -> All or Nothing
    - 작업이 완전하게 다 처리되든가 아니면 전혀 처리되지 않아야 한다
- 데이터베이스는 저장되는 데이터의 정합성이 무엇보다 중요함
- 데이터를 읽고 쓸 때 트랜잭션 단위로 처리되어야 함
- 트랜잭션 관련 SQL 명령 = TCL(Transaction Control Language)
    - COMMIT : 작업을 정상적으로 처리 완료해 DB에 반영함
    - ROLLBACK : 작업을 취소하고 이전 상태로 되돌림
    - SAVEPOINT : ROLLBACK시 부분 작업 취소를 위한 저장점을 지정함

1. 트랜잭션의 개념
- 트랜잭션 : 데이터베이스에 데이터를 읽고 쓸 때, 한 번에 수행되어야 하는 논리적인 작업 단위
- 데이터베이스틑 트랜잭션 단위로 데이터의 조작이 발생하고 하나의 일관된 상태에서 다른 일관된 상태로 변환됨
- 트랜잭션의 특성(ACID)
    - 원자성(Atomicity) : 하나의 트랜잭션으로 묶인 연산들은 'All or Nothing'의 개념으로 모두 실행되든지 아니면 전혀 실행되지 않아야 함
    - 일관성(consistency) : 트랜잭션의 결과는 데이터베이스의 정합성을 깨지 않음
        - 트랜잭션 이전에 데이터베이스에 오류가 없다면 트랜잭션 이후에도 오류가 없음
    - 고립성(Isolation) : 트랜잭션은 독립적으로 수행되며 다른 트랜잭션이 실행 중간에 간섭하거나 영향을 미치지 않음
    - 영속성(Durability) : 트랜잭션의 결과는 데이터베이스에 영구적으로 저장되어 유지됨(= 지속성)
- 트랜잭션의 격리수준이 낮을 때의 문제점
    - 여러 개의 트랜잭션을 동시에 처리할 때, 완전하게 락(Lock)을 걸고 실행하면 쓰기작업 중에는 전혀 해당 데이터를 조회하는것이 불가능하므로 조회성능이 매우 낮아짐
    - 따라서 쓰기작업 중에 읽기 작업을 어느 정도로 허용할지를 정할 수 있음 -> 트랜잭션의 격리수준
    - Dirty Read : 트랜잭션에 의해 수정되었으나 아직 커밋이 되지 않은 상태에서, 다른 트랜잭션이 해당 데이터를 읽게 되면 발생하는 데이터의 불일치 현상
    - Non-Repeatable Read : 한 트랜잭션 내에서 같은 쿼리를 두 번 실행할 때, 그 사이에 다른 트랜잭션이 값을 수정하거나 삭제하면서 첫 번째와 두 번째 쿼리의 실행결과가 달라지는 형상
    - Phantom Read : 한 트랜잭션 내에서 같은 쿼리를 두 번 실행할 때, 그 사이에 다른 트랜잭션이 값을 삽입하면서 두 번째 쿼리에서 이전에 없던 레코드가 나타나는 현상

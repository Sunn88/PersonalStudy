최적 부분 구조 Optimal Substructure
중복되는 부분 구조 Overlapping Subproblems

최적 부분 구조

중복되는 부분 문제(Overlapping Subproblems)

어떤 문제에 최적 부분 구조가 있다 = 부분 문제들의 최적의 답을 이용해 기존 문제를 풀 수 있다
- 기존 문제를 부분 문제로 나눠서 풀 수 있다 
- 중복되는 부분 문제들이 있을 수 있다(비효율 발생)

Dynamic Programming : 한 번 계산한 결과를 재활용하는 방식 -> 비효율 해결
- Memoization : 중복되는 계산은 한 번만 계산 후 메모
    - 주로 재귀문 사용
    - 필요한 계산만 수행
- Tabulation : 중복되는 것부터 해결
    - 주로 반복문 사용
    - 불필요한 과정도 수행

피보나치를 Tabulation으로 해결하면
- 시간 복잡도 : O(n)
- 공간 복잡도 : O(n)
- 아직 비효율이 남음
- 변수 두 개 사용해 좀 더 효율적으로
    - current와 previous 이용
    - 모든 계산값을 저장하지 않고 변수에 덮어쓰기 -> 공간 사용 최적화
    - 사용하는 메모리는 고정되어 있음
    - 공간 복잡도가 O(1)이 됨8

공간 최적화
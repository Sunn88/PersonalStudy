출제빈도 상

1) 논리 데이터 모델
- 개념 데이터 모델을 상세화해 논리적인 데이터 집합, 관리항목, 관계를 정의한 모델
- 논리 데이터 모델은 전체 데이터 구조에서 가장 핵심을 이루는 모델 -> 전체 업무 범위와
    업무 구성요소를 확인할 수 있음
- 개체(Entity)
    - 자료수집의 대상이 되는 정보 세계에 존재하는 사물
    - 유형, 무형의 정보로 서로 연관된 몇 개의 속성으로 구성됨
    - 개념적 개체 : 학과, 과목 등과 같은 눈에 보이지 않는 개체
    - 물리적 개체 : 책, 연필 등과 같이 눈에 보이는 개체 -> 현실 세계에 존재하는 사물
    - 속성은 이름을 가진 데이터의 가장 작은 논리적 단위
        - 파일구조에서는 속성을 항목 또는 필드(Field)라고도 함
    - 속성은 자체만으로 중요한 의미를 표현하지 못하기 때문에 단독으로 존재하지 못함
    - 속성의 값인 개체 인스턴스는 시간에 따라 변할 수도 있음
- 개체의 특징
    - 각 개체는 속성(Attribute)으로 알려진 특성들로 정의됨
    - 구체적 또는 추상적인 사물로서, 서로 구분되는 특성에 따라 속성 집합으로 표현함
- 개체의 종류
    - 독립 엔티티(Kernel Entity, Master Entity)
        - 사람, 물건, 장소, 개념처럼 원래부터 현실 세계에 존재하는 엔티티
        - ex) 사원, 고객, 영업부, 창고 업무
    - 중심 엔티티(Transaction Entity)
        - 업무가 실행되면서 발생하는 엔티티
        - ex) 주문, 납품
    - 종속 엔티티(Dependent Entity)
        - 주로 1차 정규화로 인해 관련 중심 엔티티로부터 분리된 엔티티
    - 교차 엔티티(Associative Entity, Relative Entity)
        - 교차 관계라고도 하며 두 개 이상의 엔티티 간에 발생하는 트랜잭션에 의해 발생하는 엔티티
        - 트랜잭션 빈도에 따라 데이터가 발생
        -> 대부분 논리적 모델링에서 두 개 이상의 엔티티 관계가 다대다일 때 발생
        -> 이러한 관계를 해소하려는 목적으로 인위적으로 만들어진 엔티티
- 속성(Attribute, Field)
    - 데이터베이스를 구성하는 가장 작은 논리적 단위 -> 파일 구조상의 데이터 필드(항목)에 해당됨
- 속성의 종류
    - 단일 값 속성(Single-valued Attribute)
        - 개체의 속성 중 반드시 하나의 값만 존재함
        - ex) 주민등록번호, 학번
    - 다중값 속성(Multi-valued Attribute)
        - 여러 개의 값을 가질 수 있음
        - ex) 전화번호(집, 핸드폰, 회사 등)
    - 단순 속성(Single Attribute)
        - 더 이상 작은 구성요소로 분해할 수 없는 속성
    - 복합 속성(Composite Attribute)
        - 독립적인 의미를 좀 더 기본적인 속성들로 분해할 수 있는 속성
        - ex) 이름 -> 성 + 이름

2) 관계(Relationship)
- 속성 관계(Attribute Relationship) : 개체를 구성하고 있는 속성과 속성 사이의 관계
- 개체 관계(Entity Relationship) : 개체와 개체 사이의 관계
- 관계의 종류 : 일대일, 일대다, 다대다
- 논리, 물리 개체 관계도에서의 관계 표현 - 104p 그림
    - 기수성(Cardinality)
        - 1:1, 1:N, N:M 관계
        - 해당 엔티티 한 건에 대한 상대 엔티티의 기수성을 상대 엔티티 쪽에 표기
        - 표기 방법 : James Martine 표기법
    - 선택성(Optionality)
        - 집합 의미(포함, 불포함)
        - 1:0(Optional), 1:1(Mandatory)
        - 해당 엔티티 한 건에 대한 상태 엔티티의 선택성을 상대 엔티티 쪽에 표기
        - 표기 방법 : James Martine 표기법

3) 관계형 데이터베이스의 특징
    - 대표적인 논리 데이터 모델링 방식
    - 관계형 데이터베이스를 구성하는 개체, 관계를 릴레이션이라는 테이블로 표현함
    - 관계형 데이터베이스에서 테이블이 곧 릴레이션이 됨
    - 릴레이션은 개체 릴레이션, 관계 릴레이션으로 구분할 수 있음
    - 다른 데이터베이스로의 변환이 쉬우며, 간결하고 보기 편리함
    - 관계형 데이터베이스는 릴레이션 스키마와 릴레이션 인스턴스로 구성됨

4) 관계형 데이터베이스의 구성
- 릴레이션 스키마
    - 릴레이션의 이름과 릴레이션의 속성들의 집합
    - 릴레이션을 위한 틀(Framework)
    - 릴레이션 이름(attribute 1, attribute 2, ..., attribute N)으로 되어 있음
    - 하나 이상의 릴레이션 스키마들로 이루어짐
        - 부서(부서번호, 부서이름, 위치)
        - 사원(직원번호, 직원이름, 직위, 부서번호)
- 릴레이션 인스턴스
    - 관계형 데이터베이스에서 릴레이션은 릴레이션 인스턴스들의 모임으로 구성됨

5) 릴레이션(Relation)
- 데이터를 테이블의 형태로 표현한 것
    -> 릴레이션 스키마(릴레이션 타입)와 릴레이션 인스턴스(릴레이션 어커런스)로 구성됨
- 한 릴레이션에 포함된 튜플들은 모두 다름
- 한 릴레이션에 포함된 튜플 사이에는 순서가 없음
- 각 속성은 유일한 값(원시값)을 갖고 있어야 하고, 속성들의 순서는 중요하지 않으며,
    데이터는 삽입된 순서대로 정렬됨
- 속성(Attribute)
    - 데이터베이스를 구성하는 가장 작은 논리적 단위 -> 개체의 특성과 상태 등을 기술함
        -> 파일 구조의 데이터 필드(항목)로 표현됨
    - 속성의 수를 디그리(Degree) 또는 차수라고 함
- 도메인(Domain)
    - 하나의 속성이 취할 수 있는 같은 타입의 원자(Atomic)값들의 집합
- 튜플(Tuple)
    - 릴레이션을 구성하는 각각의 행
    - 튜플의 수를 카디널리티(Cardinality) 또는 기수라고 함

6) E-R 모델에서 관계형 모델로 전환(Mapping Rule) - 107p 그림
- 데이터베이스 설계에서 개념적 모델인 E-R 모델을 논리적 모델인 관계형 모델로 전환

7) 논리 데이터 모델에서 관계의 종류
- 정상 관계
    - 엔티티 타입과 엔티티 타입이 독립적으로 분리되어 있으면서 상호 간에 한 가지 관계만
        성립하는 형태
    - ex) 부서-사원 관계
- 자기 참조 관계(Self Relationship, Recursive Relationship)
    - 하나의 엔티티 타입 내에서 엔티티와 엔티티가 관계를 맺고 있는 형태
    - 부서, 부품, 메뉴 등과 같이 계층 구조 형태를 표현할 때 유용함
    - 같은 엔티티 타입의 엔티티 간에 계층적으로 데이터가 구성될 때 자기 참조 관계로 표현함
- 슈퍼 타입 서브 타입 관계(Super-Type Sub-Type Relationship)
    - 공통 속성을 가지는 슈퍼 타입과 공통 부분을 제외하고, 두 개 이상의 엔티티 타입 간의 속성에
        차이가 있을 때 별도의 서브 타입으로 존재할 수 있음
        - 이 때 슈퍼 타입과 서브 타입의 관계 형식은 일대일
    - 서브 타입을 구분하는 형식에 따라, 슈퍼 타입의 특정 엔티티가 반드시 하나의 서브 타입에만 
        속해야 하는 배타적 관계(Exclusive Relationship)와 슈퍼 타입의 특정 엔티티가 두 개 이상의
        서브 타입에 포함될 수 있는 포함 관계로 구분됨
- 주 식별자/비 식별자 관계
    - 주 식별자 관계 : 부모 엔티티 타입의 주 식별자가 자식 엔티티 타입의 주 식별자로 상속
    - 비 식별자 관계 : 부모 엔티티 타입의 주 식별자가 자식 엔티티 타입의 일반 속성으로 상속

8) 상관 모델링
- 상관 모형화 사용의 장점
    - 데이터 모델과 프로세스 모델에 대한 품질을 향상시킬 수 있음
    - 업무 규칙에 좀 더 정확하고 상세하게 접근할 수 있음
    - 데이터 모델과 프로세스 모델에 동시에 접근하므로 데이터 모델링에서 분석된 엔티티 타입을
        이용하지 않는 프로세스를 다시 도출하거나 프로세스를 이용해 적절한 엔티티 타입이 
        도출되었는지, 관계나 속성은 모두 적절한지 검증할 수 있음
    - 분석 도구 : CRUD 매트릭스
-  CRUD 매트릭스
    - 2차원 테이블에 가로와 세로에 각각의 집합 단위를 표현해 비교해 데이터의 상태를 비교
        분석하는 기법
    - 엔티티 타입과 프로세스에 대한 비교뿐만 아니라 2차원 테이블로 비교할 수 있는 경우에 
        모두 적용되는 방법
    - 단위 프로세스가 엔티티 타입에 영향을 주는 방법 
        -> 신규, 조회, 수정, 삭제의 네 가지에 반드시 포함되어 있음
    - CREATE + READ + UPDATE + DELETE
    - 시스템의 분석부터 테스트까지 영향을 미치기 때문에 분석 단계 말이나 설계 단계 말에 
        CRUD 매트릭스를 이용한 상관 모델링 작업을 반드시 수행해야 함
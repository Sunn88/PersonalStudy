1) while문
- 조건식의 결과가 참에 해당하는 동안 명령문을 반복 수행함
- 조건식의 결과가 거짓에 해당하면 반복 블록을 수행하지 않음
- 조건식이 '항상 참'으로 결과를 생성하거나 1로 명시되어 있으면 무조건 반복에 해당됨
- 무한반복을 끝내려면 반복할 명령문들 중 break;문을 사용함
    - break; : 반복 블록을 벗어날 때 사용함 -> 중첩된 반복 블록에서는 가장 가까운 반복 블록 1개를 벗어남

2) do~while문
- 반복할 문장을 무조건 먼저 수행한 후, 조건식이 참인 경우에만 다시 반복함

3) for문
- 초기식을 최초 for문 진입 시 1회 수행한 후 조건식을 점검해 결과가 참인 경우메나 반복할 명령문들을 수행함
- 증감식을 수행한 후 다시 조건식을 저검해 역시 참인 경우에 반복 수행하고 거짓인 경우 반복을 종료함

4) break문
- for, while, do~while, switch문과 같이 반복문이나 선택문 수행 중 블록 범위를 완전히 벗어나고자 할 경우 사용

5) continue문
- break;문과 상반되는 제어문
- 반복문에서 continue;를 만나면 이후 문장을 실행하지 않고 반복 조건식으로 제어를 이동함
- 반복 구문 앞에서 반복을 중단하지 않고 이 시점부터 다음 반복으로 넘어가고 싶을 때 사용함

6) goto문
- 레이블이 있는 곳으로 무조건 분기함
- 장점 : 루틴의 빠른 실행이 가능함
- 단점 : 프로그램이 비구조적이 되고 이해하기 어려워짐
- 구조적 프로그래밍에서는 goto문을 사용하지 않음
- C언어에는 존재하지만, Java언어에는 존재하지 않는 제어문
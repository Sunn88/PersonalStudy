1) 상수(constant)의 개념
- 항상 고정된 값을 갖는 자료(값) -> 변경 불가능
- 유형 : 정수형, 실수형, 문자형, 문자열형, 논리형
- 수명 시간 동안 고정된 하나의 값과 이름을 가진 자료
- 프로그램이 동작하는 동안 값이 바뀌지 않는 공간

2) C 프로그램이의 상수
- 정수형 상수 : 10진수, 8진수, 16진수 표현 가능
- 실수형 상수 : 소수 형식, 지수 형식
- 문자형 상수
    - 키보드 문자 + escape 문자
    - 작은따옴표로 묶은 1개의 영문자나 숫자문자나 특수문자
    - 내부적으로는 ASCII코드값으로 저장
- 문자열형 상수
    - 큰따옴표로 묶은 여러 개의 영문자 및 숫자문자나 특수문자
    - 문자열 끝에 문자열의 끝을 의미하는 null 문자("\0") 추가

3) 변수(variable)
- 변수 : 프로그램 실행 중 변경할 수 있는 값이 저장되는 기억공간(= 메모리)
- 프로그램에서 하나의 값을 저장할 수 있는 기억 장소의 이름을 의미함
- 변수의 4요소 : 주소(address), 이름(name), 값(value), 자료형(datatype), 속성, 참조 등
- 프로그래머가 각 언어별로 변수명을 만드는 규칙에 따라 임의로 이름을 붙일 수 있음
- 묵시적으로 변수형을 선언할 수도 있고, 선언문을 사용할 수도 있음
- 변수의 유형은 컴파일 시간에 한 번 정해지면 일반적으로 그대로 유지함
- 변수의 수명 : 할당된 변수가 값을 저장할 기억장소를 할당받은 때부터 그 기억장소가 더 이상 변수값을 의미하지 않을 때 까지의 시간
    - 바인딩 이후 변수를 사용할 수 있음
    - 바인딩
        - 어떤 변수의 명칭과 그 메모리 주소, 데이터형 또는 실제 값을 연결하는 것
        - 바인딩 시간(Binding Time) : 변수들이 갖는 속성이 완전히 결정되는 시간
        - 종류 : 정적 바인딩(번역시간), 동적 바인딩(실행시간)

4) 변수의 선언문
- 변수의 선언문
    - 변수명과 자료형을 결정 -> 기억공간 할당
    - 프로그램 실행 시 사용할 데이터의 속성 정보를 컴파일러(언어번역기)에게 알려주는 문장
    - 효율적인 주기억장치의 관리가 가능함
    - 정적형 검사가 가능함
- C언어의 변수명 정의 규칙(Naming Rule)
    - 변수명은 식별자이므로 영문 대소문자, 숫자를 혼합해 명명함
    - 대소문자를 구별하며, 변수명으로 예약어를 사용하는 것을 금지함
    - 밑줄을 지외한 모든 특수문자의 사용을 금지함
    - 숫자로 시작하는 것을 금지함
    - 데이터의 의미나 역할을 표현할 수 있는 이름으로 명명하는 것이 프로그램의 가독성과 유지보수성 증가를 위해 바람직함

5) 변수의 대입문 및 초기화
- 변수의 대입문
    - 변수(기억공간)에 자료(값)를 대입(할당, 배정, assign)하는 것
    - 변수의 내용(값)을 변경하는 문장
    - 프로그램에서 가장 일반적으로 사용하는 연산문
- 변수의 초기화
    - 변수의 초기화를 통해 변수선언이 이루어짐과 동시에 특정 값을 부여할 수 있음

6) 변수와 C언어의 scanf() 함수
- 콘솔(키보드)을 통해 사용자가 직접 원하는 값을 변수에 대입하고자 할 때 사용
- scanf("입력 형식", &입력대상1, &입력대상2, ...);

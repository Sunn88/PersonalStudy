출제빈도 중
빈출태그 : EAI / EAI 유형 / EAI 구성요소 / ESB / EAI/ESB 비교 / XML / Web Service

1) 모듈 연계
- 송/수신 시스템과 중계 시스템 사이의 연계 방식인 연계 메커니즘을 바탕으로 구현된
    연계 시스템 환경과 모듈 구현 환경을 의미함
- 시스템 인터페이스를 목적으로 '내부 모듈-외부 모듈' 또는 '내부 모듈-내부 모듈'간 
    인터페이스를 위한 관계를 설정하는 방식 -> EAI, ESB 방식이 있음

2) EAI(Enterprise Application Integration, 기업 애플리케이션 통합)
- 정의
    - 기업 내부에서 운영되는 각종 플랫폼 및 애플리케이션 간의 정보 전달, 연계, 통합을
        가능하게 해주는 솔루션
    - 각 비즈니스 간 통합 및 연계성을 증대시켜 효율성을 높일 수 있음
    - 각 시스템 간의 확정성을 높여줄 수 있음
    - 타 시스템에서 필요한 정보를 취득해 다양한 서비스를 사용자에게 제공할 수 있음
- 유형 - 190p 그림
    - Point-to-Point
        - 애플리케이션을 중간 미들웨어 없이 point to point로 연결하는 기본적인 통합 방식
        - 별도로 솔루션(미들웨어)을 구매하지 않고 구축할 수 있음
        - 상대적으로 저렴하게 구축할 수 있지만, 변경 및 재사용이 어려움
    - Hub & Spoke
        - 단일 접점인 허브 시스템을 통해 데이터를 전송하는 중앙 집중형 방식
        - 확장 및 유지보수가 수월함
        - 중앙 허브에 장애가 생기면 시스템 전체에 영향을 줌
    - Message Bus(ESB 방식)
        - 애플리케이션 사이에 미들웨어를 배치해 처리하는 방식
        - 확장성이 뛰어남
        - 대용량 데이터 처리에 유리함
    - Hybrid
        - Hub & Spoke와 Message Bus의 혼합 방식
        - 데이터 병목 현상을 최소화할 수 있으며 한 가지 방식으로 EAI를 구현할 수 있음
        - 그룹 내 : Hub & Spoke, 그룹 간 : Message Bus
- 구성 요소
    - Platform
        - 데이터의 안전한 전달 기능, 미들웨어 기능, 실행 환경 제공
    - Application Adapter
        - 다양한 패키지 및 In-House 애플리케이션을 위한 재사용성 높은 인터페이스 지원
            (DB, CRM, ERP, DW 등 연결)
        - 각기 다른 애플리케이션과 메시지 통로 사이에서 데이터를 입출력하는 도구
    - Data Broker
        - 애플리케이션 간 통합을 위해 데이터 포맷과 데이터 코드 변환을 담당
    - Business Work Flow
        - 미리 정의한 업무 프로세스에 따라 애플리케이션 간 데이터 전달 및 연동을 처리하는
            소프트웨어 모듈
    
3) ESB(Enterprise Service Bus)
- 정의
    - Web Service, Intelligent Routing, Transformation 기술을 기반으로 SOA를 지원하는
        미들웨어 플랫폼
        - SOA(Service Oriented Architecture) : 일 처리에 해당하는 소프트웨어 기능을 서비스로
            판단하고 그 서비스를 네트워크상에 연동해 시스템 전체를 구축해 나가는 방법론
    - 애플리케이션 간의 데이터 변환 및 연계 지원 등을 제공하는 인터페이스 제공 솔루션
    - 애플리케이션 간의 통합 관점으로 EAI와 유사하다고 볼 수 있으나 애플리케이션보다는 
        서비스 중심으로 통합을 지향하는 아키텍처 또는 기술을 의미함
    - 범용적으로 사용하기 위해서는 애플리케이션과의 결합도를 약하게 유지해야 함
    - 웹 서비스 중심으로 표준화된 데이터, 버스를 통해 이 기종 애플리케이션을 유연
        (Loosely-Coupled)하게 통합하는 핵심 플랫폼(기술)
    - 관리 및 보안이 쉽고 높은 수준의 품질 지원이 가능함
- 도입 효과
    - 애플리케이션 통합 및 협업 지원
    - 실시간 기업(RTE) 기반 제공
        - RTE(Real-Time Enterprise)
            - 회사의 주요 경영정보를 통합관리하는 실시간 기업의 기업경영시스템
            - 전사적 자원관리(ERP), 판매망 관리(SCM), 고객관리(CRM) 등 부문별 전산화를 넘어
                회사 전부문의 정보를 하나로 통합해 경영자의 빠른 의사결정을 위한 시스템
    - 공통 서비스 환경 제공
- 기술 요소
    - 서비스 통합 : XML, SOAP, WSDL
    - 웹 서비스 보안 프로토콜 : XKMS, XACML, XML 전자서명
    - SOA 지원 : ebXML, BPEL, BPM, BPMN
* 웹 서비스 보안 프로토콜
    - SAML(인증/권한 관리) : 이기종 시스템간 권한 확인 가능, 인증 및 권한정보를 명세, 보안 토큰
    - XKMS(키 관리) : 부인 방지, 개방형 표준화, 기존 PKI 연동 용이, 구현 단순성 및 응용 개발
        용이성
    - XACML(접근 제어) : 정보 접근을 위한 XML 명세, UDDI 및 WSDL 항목 접근 제어

4) EAI/ESB 비교
- EAI
    - 목적 : 애플리케이션 통합
    - 개념 : 미들웨어(Hub)를 이용해 비즈니스 관련 로직을 중심으로 기업 내 애플리케이션
        통합 연계
    - 방식 : Native Adapter
    - 표준 : 벤더 종속적 기술 사용
    - 통합 범위 : 기업 내 이기종 애플리케이션
    - 경제성(TCO) : 대상 시스템별로 Adapter 구매 또는 지속적인 개발 비용 투입 요구됨
    - 확장성 : 지원 adapter 내 확장 가능해 확장성이 높음
    - 활용 : E-Biz 인프라
    - Architecture : 중앙집중식(1:1)
- ESB
    - 목적 : 애플리케이션 및 프로세스 통합
    - 개념 : 미들웨어(Bus)를 이용해 서비스 중심으로 서비스를 지원하기 위한 관련 시스템의
        유기적 연계
    - 방식 : 웹 서비스, JMS, IIOP 등
    - 표준 : 표준 기술 사용(웹 서비스, XML 등)
    - 통합 범위 : 기업 내외 애플리케이션
    - 경제성(TCO) : 비즈니스 로직(서비스) 단위의 재사용으로 통합 비용 절감
    - 확장성 : 매우 높음(서비스 오케스트레이션)
    - 활용 : SOA 인프라 구현 핵심 플랫폼
    - Architecture : 버스 형태의 느슨한 연결 구조(1:N)

5) XML(Extensible Markup Language)
- 레바논 출신 유리 루빈스키 -> 기본 HTML이 장애인을 위한 점자 출력이 불가능하다는 단점 지적
    -> W3C에서 개발된 기술
- XML은 SGML의 단순화된 집합 -> 다른 많은 종류의 데이터를 기술하는 데 사용할 수 있음
    - SGML(Standard Generalized Markup Language)
        - 문서용 마크업 언어를 정의하기 위한 메타언어
        - 다양한 응용이 가능하도록 다양한 마크업 구문을 제공함
- 구조적인 데이터를 위한 것이며 모듈식임
- 인터넷에 연결된 시스템끼리 데이터를 쉽게 주고받을 수 있게 해 HTMl의 한계를 극복할 목적으로
    만들어짐
- 트리 형태의 구조로 구성되어 있으며 사용자가 직접 Tag를 정의할 수 있음
- 시작, 종료 태그의 요소 이름은 같아야 하며 모든 태그는 종료 태그를 가져야 함
- 속성값은 반드시 ""로 묶어 주어야 하며 대소문자를 구분함
- XML 기반의 언어 : RDF, RSS, Atom, MathML, XHTML, SVG
    - RSS(Rich Site Summary) : 뉴스나 블로그 사이트에서 주로 사용하는 콘텐츠 표현 방식

6) 웹 서비스(Web Service)
- 정의
    - 네트워크에 분산된 정보를 표준화된 서비스 형태로 공유하는 기술
        -> 서비스 지향 아키텍처(SOA) 개념을 실현하는 대표적인 기술
    - SOAP, WSDL, UDDI 등 표준 기술을 이용해 네트워크에 연결된 다른 컴퓨터 간 상호작용을 위한
        서비스 도는 플랫폼을 의미함
        - WSDL(Web Service Description Language)
            - XML로 기술된 웹 서비스 기술 언어 또는 기술된 정의 파일의 총칭
            - 서비스 제공 장소, 서비스 메시지 포맷, 프로토콜 등 웹 서비스의 구체적 내용이 기술됨
        - UDDI(Universal Description, Discovery, and Integration)
            - 인터넷상에서 전 세계의 비즈니스 업체 목록에 자신의 목록을 등록하기 위한
                XMl 기반의 레지스트리
    - 특징 : 기존 웹 환경과 호환 가능한 상호운용성, 시스템 구조의 유연성, XML을 기반으로한 
        단순성, 사용의 편리성, 시스템 간 통합 환경 제공, 분산 시스템 간 SW 통합 자동화를 통해
        IT 개발/운영비용 절감 등
- 필요성
    - SOAP, UDDI, XML 등의 연계 기술의 발달 및 표준화가 정착됨
    - 복잡한 기업 환경으로 인해 혼재된 시스템간 연계, 데이터 공유가 필요해짐
        - 혼재된 시스템 : C/S, ERP, CRM 등 다양한 시스템이 혼재되어 운용되고 있음
    - e-Commerce의 유행으로 데이터 공유 및 변환 작업 지원이 필요해짐
- 구성
    - SOAP(Simple Object Access Protocol)
        - 서비스를 실제로 이용하기 위한 객체 간의 통신 규약
        - HTTP, HTTPS, SMTP 등의 프로토콜을 이용해 XML을 교환함
        - 프락시와 방화벽의 영향 없이 통신할 수 있음
        - 주요 요소 : Envelope, Header, Body
    - WSDL(Web Service Description Language)
        - 웹 서비스명, 제공 위치, 메시지 포맷, 프로토콜 정보 등 웹 서비스에 대한 상세 정보를
            기술한 파일
        - 독립적이며 단순한 XML 형식으로 구현됨
        - UDDI의 기초가 됨
        - 인터넷 웹 서비스를 제공하기 위해 SOAP, XML 스키마와 결합해 사용함
    - UDDI(Universal Description Discovery and Integration)
        - WSDL을 등록해 인터넷에서 전 세계 비즈니스 목록에 자신을 등재하기 위한
            확장성 생성 언어(XML) 기반의 규격화된 레지스트리
- 웹 서비스 방식의 환경 구축 절차
    - 송/수신 파일 경로 및 파일명을 정의함
    - 송신 연계 응용 프로그램을 구현함
    - 파일을 전송함(SOAP 대신 REST 프로토콜로 대체할 수 있음)
        - REST(Representational State Transfer)
            - 월드 와이드 웹과 같은 분산 하이퍼미디어 시스템을 위한 소프트웨어 아키텍처의 한 형식
            - 데이터를 HTTP에서 부가적인 전송 레이어 없이 전송하기 위한 간단한 인터페이스
    - 수신 DB에 반영 서비스를 호출함
    - 수신 연계 응용 프로그램을 구현함
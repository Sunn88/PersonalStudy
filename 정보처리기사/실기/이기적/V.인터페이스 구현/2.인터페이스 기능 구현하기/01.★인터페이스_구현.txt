출제빈도 중
빈출태그 : JSON / 컴포넌트 명세서 / AJAX / DOM
* 인터페이스에 사용되는 기술과 표준에 대해 중점을 두고 학습

1) 인터페이스 구현
- 송수신 시스템 간의 데이터 교환 및 처리를 실현해 주는 작업
- 데이터 통신을 이용한 인터페이스 구현
    - 애플리케이션 영역에서 인터페이스 형식에 맞춘 데이터 포맷을 인터페이스 대상으로 전송하고
        이를 수신측에서 구문분석해 해석하는 방법
    - 주로 JSON이나 XML 형식으 데이터 포맷을 사용해 인터페이스를 구현함
- 인터페이스 엔티티를 이용한 인터페이스 구현
    - 인터페이스가 필요한 시스템 사이에 별도의 인터페이스 엔티티를 두어 상호 연계하는 방식

2) 모듈 간 세부 설계서
- 모듈의 구성요소와 세부적인 동작 등을 정의한 설계서
- 하나의 독립적인 기능을 수행하는 모듈의 구성요소와 세부적인 동작을 정의한 설계서
- 컴포넌트 명세서 - 251p 그림
    - 컴포넌트 : 기능을 수행하기 위해 독립적으로 개발되어 보급되는, 다른 컴포넌트와 조립되어
        응용시스템을 구축하기 위해 사용되는 소프트웨어
    - 컴포넌트의 개요 및 내부 클래스의 동작, 인터페이스를 통해 외부와 통신하는 명세 등을
        정의한 명세서
    - 실제 코드 수준의 클래스 명칭, 설계 수준의 논리적 클래스 명칭을 사용할 수 있음
    - 컴포넌트 개요 : 컴포넌트의 목적을 작성
    - 클래스명과 설명 : 컴포넌트의 주요 기능을 작성
    - 인터페이스 클래스 : 인터페이스의 주요 기능 작성
- 인터페이스 명세서 - 252p 그림
    - 컴포넌트 명세서에 명시된 인터페이스 클래스의 세부적인 조건과 기능을 정의한 명세서
    - 인터페이스의 명칭, 설명, 사전/사후 조건, 인터페이스 데이터와 인터페이스 후 성공 여부를
        반환받는 값이 정의됨

3) 인터페이스 구현
- 인터페이스 개체를 사용하는 인터페이스 구현
    - 송신 시스템의 인터페이스 테이블
        - 이벤트 발생 시 인터페이스 테이블에 인터페이스 내용이 기록되도록 구현
        - 송신 관련 정보를 관리하기 위한 항목과 송신 시스템에서 필요한 항목 구현
        - DB 관계(DB Connection)가 수신측 인터페이스 테이블과 연계되도록 구현
        - 트리거(Trigger), 프로시저(Procedure), 배치 작업(Batch Job) 등을 통해서
            수신 테이블로 데이터를 전송하도록 구현
    - 수신 시스템의 인터페이스 테이블
        - 수신 관련 정보를 관리하기 위한 항목과 수신 시스템에서 필요한 항목 구현
        - 수신측 시스템에서는 인터페이스 데이터를 읽은 후 사전에 정의된 데이터 트랜잭션을
            진행할 수 있도록 구현
        - 데이터를 읽을 때나 해당 트랜잭션이 진행될 때 오류가 발생하면 오류 코드 컬럼에 정의된
            오류 코드와 오류 내용을 입력하도록 구현
- 데이터 통신을 사용하는 인터페이스 구현
    - 인터페이스 객체 생성 구현
        - 인터페이스 객체를 생성하기 위해 데이터베이스에 있는 정보를 SQL을 통해 선택한 뒤
            이를 JSON으로 생성
    - 전송 결과를 수신측에서 반환받도록 구현
        - 송신측에서 JSON으로 작성된 인터페이스 객체를 AJAX 기술을 이용해 수신측에 송신
            - AJAX(Asynchroonous Javascript And Xml)
                - Java Script를 사용한 비동기 통신 기술
                - 클라이언트와 서버 간에 XML 데이터를 주고받는 기술
                - 브라우저가 가지고 있는 XML HTTP Request 객체를 이용해 전체 페이지를
                    새로 고치지 않고도 페이지 일부만을 위한 데이터를 로드하는 기법
        - 수신측에서는 JSON 인터페이스 객체를 수신받고 이를 구문분석 후 처리
        - 수신측의 처리 결과값은 송신측에 True/False 값을 전달해 인터페이스 성공 여부를
            확인하고 전달함

* AJAX의 장단점
    - 장점
        - 웹 페이지의 속도가 향상됨
        - 서버의 처리가 완료될 때까지 기다리지 않고 처리할 수 있음
        - 서버에서 Data만 전송하면 되므로 전체적인 코딩의 양이 줄어듦
        - 기존 웹에서는 불가능했던 다양한 UI를 가능하게 해줌
    - 단점
        - 히스토리 관리가 되지 않음
        - 페이지 이동이 없는 통신으로 인해 보안상의 문제가 있음
        - 연속으로 데이터를 요청하면 서버 부하가 증가할 수 있음
        - XML Http Request를 통해 통신하는 경우, 사용자에게 아무런 진행 정보가 제공되지 않아
            요청이 완료되지 않았음에도 사용자가 페이지를 떠나거나 오작동할 우려가 발생하게 됨
        - AJAX를 쓸 수 없는 브라우저에 대한 문제 이슈가 있음
        - HTTP 클라이언트의 기능이 한정되어 있음
        - 지원하는 Charset이 한정되어 있음
        - Script로 작성되므로 디버깅이 쉽지 않음
        - Cross-Domain 문제로 동일 출처 정책으로 인해 다른 도메인과는 통신할 수 없음

4) 인터페이스 예외처리 방안
- 인터페이스를 구현하고 동작하다 보면 환경, 입력값 등 다양한 이유로 예외처리가 되는 경우가
    발생하며, 인터페이스 구현 방법에 따라 예외처리 방법이 다름
- 데이터 통신을 사용한 인터페이스에서 예외처리 방법
    - AJAX 방식을 사용해 JSON 객체를 전달하므로 AJAX 방식의 예외처리 방식에 따라
        JSON 객체 인터페이스 송수신 시 구현하도록 함
    - 송신측에서 인터페이스 객체를 예외처리하는 방법
        - AJAX 호출 후 반환값을 받아 어떻게 처리할지를 호출하는 부분에서 정의함
        - 반환 사례는 크게 성공과 실패 두 가지로 구분함
        - 실패 시 예외처리가 일어나며, 예외처리 반환 메시지에 따라 세부적으로
            예외처리 기능이 분류됨
    - 수신측에서 인터페이스 객체를 예외처리하는 방법
        - 수신측에서 전달받은 JSON 객체를 처리할 때 try~catch 구문을 이용해 예외를 처리한 뒤
            이를 송신측에 전달함
        - 예외 결과를 별도로 Response에 Set하지 않아도 에러 발생 시 에러 결과가 반환됨

* jQuery
    - 정의
        - HTML 내에서 클라이언트 사이드 스크립트 언어를 단순화하도록 설계된
            브라우저 호환성이 있는 Java Script 라이브러리
        - 2006년 뉴욕시 바 캠프(Barcamp NYC)에서 존 레식에 의해 공식적으로 소개됨
        - 현재 가장 인기 있는 Java Script 라이브러리 -> 표준에 가까운 점유율
        - 'write less, do more' 모토로 초보자도 어렵지 않게 이해할 수 있을 만큼 쉬움
    - 기능
        - DOM 요소 선택기의 파생 프로젝트
            - DOM(Document Object Model, 문서 객체 모델)
                - 객체 지향 모델로서 구조화된 문서를 표현하는 형식
                - 플랫폼/언어 중립적으로 구조화된 문서를 표현하는 W3C 공식 표준 모델
        - DOM을 탐색 및 수정함
        - CSS 셀렉터에 기반한 DOM 조작, 노드 요소 및 노드 속성(아이디 및 클래스)을
            셀렉터 생성을 위한 기준으로 사용함
        - 이벤트, 특수효과 및 애니메이션, AJAX, JSON 파싱, 플러그인을 통한 확장성을 제공함
        - inArray(), each() 함수 등 유틸리티, 호환성 메소드
        - 멀티브라우저를 지원(크로스 브라우저와는 다른 개념)함
            (지원 브라우저 : 파이어폭스, 구글 크롬, 사파리, 오페라)

- 인터페이스 엔티티를 사용한 인터페이스에서 예외처리 방법
    - 인터페이스 테이블을 통해 인터페이스 기능상 문제에서 예외상황이 발생하였을 경우
        예외처리 메시지와 함께 예외처리가 발생한 원인을 인터페이스 이력에 같이 기록함
    - 송신 인터페이스 테이블에서 예외처리 방법
        - 예외 유형에 따른 예외 코드를 입력하고 세부 예외 원인을 송신 인터페이스 테이블에
            같이 입력함
        - 해당 행위는 송신 인터페이스 테이블을 동작하는 객체에 정의함
        - 예외 발생 시 프로시저, 트리거 등 데이터를 이동하는 주체에 예외 유형을 정의하고
            예외 원인을 송신 인터페이스 테이블에 업데이트함
    - 수신 인터페이스 테이블에서 예외처리 방법
        - 전송 완료된 데이터를 읽을 때 데이터가 없거나 잘못된 값을 읽어 들일 때
            예외가 발생할 수 있음
        - 예외 발생 시 사전에 정의된 예외 코드를 입력하고 예외 발생 사유를 함께 기록함
        - 수신 정보를 활용할 때 예외 발생 시, 수신 인터페이스 테이블에 별도의 예외사항을
            기록하도록 함
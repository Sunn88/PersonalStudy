출제빈도 중
빈출태그 : 인터페이스 정의서 / XML
* 구체적인 수행 방법론보다는 주요 기술 용어 중심으로 학습하기

1) 인터페이스의 개념
- 애플리케이션 개발 단계에 정의된 내/외부 모듈 및 컴포넌트 간의 데이터 교환과 데이터 처리를
    위한 기능을 의미함
- 인터페이스 설계서를 통해 내/외부 모듈 간의 상세 인터페이스 기능을 확인함

2) 인터페이스 설계서(정의서)
- 다른 기종 시스템이나 컴포넌트 간 데이터 교환 및 처리를 위한 목적으로 각 시스템의 교환 데이터
    및 업무, 송수신 주체 등이 정의된 문서
- 시스템에 갖는 인터페이스 목록과 세부 인터페이스를 명세하는 설계문서
- 시스템의 인터페이스 현황을 한눈에 확인하기 위해, 이 기종의 시스템 간의 데이터 교환과 처리를
    위해 사용되는 데이터뿐 아니라 업무, 송수신 시스템 등에 관한 상세 내용을 기술한 문서
- 정적, 동적 모형을 통한 설계서, 일반적 형태의 설계서로 구분됨
    - 정적, 동적 모형을 통한 설계서
        - 시각적인 다이어그램을 이용해 정적, 동적 모형으로 각 시스템의 구성요소를 표현한 문서
        - 각 인터페이스가 어느 부분에 속하는지 분석할 수 있음
        - 교환 트랜잭션의 종류를 분석할 수 있음
    - 데이터 정의를 통한 설계서
        - 개별 인터페이스의 상세 데이터 명세, 시스템 인터페이스 목록, 각 기능의 세부 인터페이스
            정보를 정의한 문서
        - 시스템 인터페이스 설계서 : 시스템 인터페이스 목록을 만들고 각 인터페이스 목록에 대한
            상세 데이터 명세를 정의하는 것
        - 상세 기능별 인터페이스 명세서 : 각 기능의 세부 인터페이스 정보를 정의한 문서
- 인터페이스 목록
    - 시스템의 인터페이스 목록을 나열한 문서
    - 인터페이스 번호, 인터페이스가 되는 시스템의 정보, 관련 요구사항 ID 등으로 구성됨
- 인터페이스 명세서
    - 인터페이스 목록에 있는 각 인터페이스의 상세 정보를 표현
    - 각 인터페이스 번호당 인터페이스되는 데이터, 데이터 형식, 송수신 시스템의 정보 등으로 구성됨
- 인터페이스 설계서 양식- 243p 그림

3) 상세 기능 인터페이스 정의서
- 인터페이스의 각 세부 기능의 개요, 세부 기능이 동작하기 전에 필요한 사전 조건, 사후 조건 및
    인터페이스 파라미터(데이터), 호출 이후 결과를 확인하기 위한 반환값 등을 정의한 문서
- 상세 기능 인터페이스 정의서 양식 - 244p 그림

4) 모듈 연계 => 통합 구현 파트
- 시스템 인터페이스를 목적으로 내부 모듈-외부 모듈 또는 내부 모듈-내부 모듈 간 인터페이스를
    위한 관계를 설정하는 것
- EAI와 ESB 방식이 있음
*ESB의 특징과 구성요소
    - 특징
        - 다양한 시스템과 연동하기 위한 멀티 프로토콜 지원
        - 느슨한 결합(loosely coupled)
        - 소프트웨어 컴포넌트를 조합해 서비스를 조립하는 BPM 지원
        - 이벤트/표준 지향적
    - 구성요소
        - 어댑터 형식의 레거시 연동 컴포넌트
        - 메시지의 변환, 가공
        - BPM(business process management) : 기업의 업무 흐름을 한눈에 볼 수 있도록 만들어
            인력과 시스템을 적절하게 투입하고 통제하는 기업의 업무 프로세스를 관리하는 경영 방법
        - 통합 개발환경
        - 컨트롤과 모니터링

5) 내/외부 모듈 간 인터페이스 데이터 표준 확인
- 인터페이스 데이터 표준 확인
    - 내/외부 모듈 간 데이터를 교환 시 데이터 표준을 정의하고 이를 관리해야 함
    - 인터페이스 데이터 표준 : 내/외부 모듈 간 교환되는 데이터 사이의 형식과 표준을 정의하는 것
    - 기존 데이터 중 공통 영역을 추출해 정의하는 경우 인터페이스를 위해 다른 한쪽의 데이터
        형식을 변환하는 경우가 있음
    - JSON, DB, XML 등 다양한 표준으로 인터페이스 모듈을 표현할 수 있음
        - JSON(Java Script Object Notation)
            - 데이터 통신을 이용한 인터페이스 구현 방법
            - 속성-값의 쌍(Attribute-Value Pairs)인 데이터 객체 전달을 위해 사람이 읽을 수 있는
                텍스트를 사용하는 개방형 표준 포맷
            - 비동기 처리에 쓰이는 AJAX(Asynchronous JavaScript and XML)에서 XML을 대체하는
                주요 데이터 포맷
        - XML(eXtensible Markup Language)
            - 데이터 통신을 이용해 인터페이스 구현에 사용되는 다목적 마크업 언어
            - HTML(웹 페이지 기본 형식) 문법과 웹 브라우저와 호환 문제와
                SGML(Stand Generalized Markup Language)의 복잡성을 해결하기 위해 개발됨
            - 다른 목적의 마크업 언어를 만드는 데 사용되는 다목적 마크업 언어
            - 다른 시스템끼리 다양한 종류의 데이터를 손쉽게 교환할 수 있음
            - 새로운 태그를 만들어 추가해도 계속해서 동작하므로 확장성이 좋음
            - 데이터를 보여주지 않고, 데이터를 전달하고 저장하는 것만을 목적으로 함
            - 텍스트 데이터 형식의 언어로 모든 XML 문서는 유니코드 문자로만 이루어짐
            - XML 기반의 언어 : XHTML, SVG, RDF, RSS, Atom, MathML
            - 표준성, 분리성, 단순성, 호환성, 수용성, 확장성, 정보검색의 정확성 증의 특징을 가짐
            - 주요 특징
                - XML 선언
                    - XML 문서는 자신에 대한 정보 일부를 선언하는 것으로 시작함
                - 유니코드 문자
                    - XML 문서는 문자로 이루어져 있으며, 거의 모든 올바른 유니코드 문자는
                        XML 문서에 나타날 수 있음
                - 엘리먼트(Element)
                    - 문서의 논리 요소 -> 시작 태그로 시작해 짝이 되는 끝 태그로 끝나거나
                        빈 엘리먼트 태그만으로 이루어짐
                    - 자식 엘리먼트를 포함할 수 있음
                - 어트리뷰트(Attribute)
                    - 엘리먼트 태그 속에 위치하는 속성 정보
                - 마크업(Mark up)과 내용(Content)
                    - XML 문서를 구성하는 문자들은 마크업과 내용으로 구분되며, 간단한 문법
                        규칙으로 이루어짐
                    - 마크업으로 구성된 문자열은 '<'로 시작해 '>'로 끝나거나 '&'으로 시작해
                        문자 ';'로 끝나며, 마크업이 아닌 문자열은 내용임
                    - 태그(Tag) : '<'로 시작해 '>'로 끝나는 마크업 구조
                - XML 파서(Parser) : 마크업을 분석하고 필요한 정보를 추출해 애플리케이션에 넘김
- 인터페이스 데이터 표준 작성
    - 상호 인터페이스해야 할 모듈의 데이터 표준과 함께 인터페이스 데이터 표준을 같이 정의하고
        산출물에 표현함

6) 송, 수신측 모듈의 데이터 표준
- 일반적으로 업무적인 테이블 정의서 내용과 같으나 인터페이스가 필요한 부분은 별도로 표기해
    인터페이스에 사용될 것임을 알려줌

7) 모듈 간 인터페이스 데이터 표준 확인 순서
- 식별된 데이터 인터페이스를 통해 인터페이스 데이터 표준을 확인함
- 인터페이스 데이터 항목을 식별함
- 인터페이스 표준을 검토해 최종적인 인터페이스 데이터 표준을 확인함

* 웹에서 사용되는 Script 언어의 종류
    - HTML(HyperText Markup Language)
        - 현재도 사용되지만 기능의 제약이 많아 최근엔 부분적으로 쓰임
        - 개발이 빠르고 관리도 쉬움
    - ASP(Active Server PAge)
        - MS사에서 개발한 언어
        - Windows Server 플랫폼만 지원함
    - PHP(Personal Hypertext Preprocessor)
        - 1994년 Rasmus Lerdorf라는 사람에 의해 처음으로 고안됨
        - 현재 세계에서 가장 많이 사용하는 웹 서버인 아파치 웹 서버에 모듈 형태로 장착되어
            쓰이고 있음
        - 유닉스뿐만 아니라 윈도우에서도 사용할 수 있고, ASP와 마찬가지로 서버측 스크립트임
    - JSP(Java Server Page)
        - Java를 기반으로 하는 SUN사에서 개발한 언어
        - 주로 은행이나 중요 회사에 많이 쓰이며 보안성이 뛰어남
        - 코딩이 어렵고 ASP보다 코드량이 1.5배가량 많음
        - 리눅스와 윈도우 모두 가능하며 DBMS도 다양하게 지원함
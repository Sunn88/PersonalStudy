1) 배열(array) 변수
- C언어는 배열과 구조체와 같은 사용자 정의 자료형을 제공함
- 한 번의 선언으로 여러 개의 메모리 공간을 관리할 수 있음
- 같은 자료형의 값을 메모리 공간에 순서적으로 하나의 이름(배열명)으로 모아 놓은 것
- 배열의 초기화
    - 배열 요서의 범위 : 배열명[0]~배열명[첨자-1]
    - 배열의 첨자(index) : 0부터 시작
    - 배열 선언과 동시에 초기화 시, 요소의 개수 생략 가능
    
2) 1차원 문자 배열과 문자열 배열
- C언어에서는 문자열 상수를 1차원의 문자 배열과 문자열 배열을 통해 메모리에 저장해 참조함
- C언어의 문자열 배열은 문자 배열보다 1byte의 널문자('\0')를 포함하고 있음
- C언어의 문자상수의 경우는 1byte의 char 자료형으로 문자형 변수에 저장됨
    - 이 때 문자상수는 ASCII코드로 표현됨

3) 2차원 배열
- 2차원 배열의 선언 형식 : 자료형 배열명[행 개수][열 개수];
- 2차원 배열변수의 원소에 초깃값을 배정하려면 행우선(row-major) 원칙을 따라 배정함
    - 행 인덱스를 고정시킨 상태에서 열 인덱스를 먼저 증가시키면서 초깃값을 배정하는 방법
    - C언어와 Java언어 모두 동일함
- 2차원 배열의 인덱스의 시작 값은 행 인덱스와 열 인덱스 모두 0임

4) Java언어의 자료형
- 기본형(Primitive Type)
    - 정해진 자료형의 값 자체
    - 기본형 변수의 선언문
        - int a = 10;
        - double b = 3.14;
- 참조형(Reference Type)
    - C언어의 포인터와 같으며 실제 값이 저장된 메모리 주소에 해당함
    - 참조형 변수의 선언문
        - int anArr[];
        - String rStr;

5) Java언어의 배열
- C언어 배열과 Java언어 배열
    - C언어에서의 배열은 int, char형과 같은 기본형 상수들을 배열변수의 인덱스를 통해 참조함
    - Java언어에서의 배열은 참조형 변수를 통해 배열객체를 참조함
- Java 배열의 선언 규칙
    - 배열은 선언한 뒤 초기화나 배열객체 생성 후 사용 가능함
    - 배열의 크기를 지정할 수 없음
    - 다차원 배열을 255차원까지 가능함
- Java 배열의 크기
    - '배열이름.length'를 통해 배열의 크기인 요소의 개수를 알 수 있음

6) Java언어의 문자열
- Java언어에서는 문자열상수를 String 클래스를 통해 참조함
- String 클래스
    - java.lang 패키지의 주요 클래스 중 하나인 String 클래스
    - 주요 문자열을 출력하거나 결합하는 데 사용함
    - Java언어는 String 클래스를 통해 편리하게 문자열 사용 가능함
    - String 클래스를 이용하면 문자열 간 결합이 용이함
- String 클래스의 주요 메소드
    - char charAt(int index) : 인덱스 위치의 문자 하나 리턴
    - boolean equals(Oabject obj) : 다른 문자열 객체와 비교
    - String replace(char oldChar, char newChar) : 특정 문자를 새로운 문자로 치환
    - static String valueOf(para) : 숫자값을 문자형으로 처리
    - int length() : 문자열의 길이(널문자 제외)

7) Java언어의 문자열과 +연산자
- +연산자
    - 문자열형 변수나 리터럴에 대해 연결(문자열 연결)함
    - +연산자를 사용할 경우, 기본형이나 참조형 데이터를 문자열로 자동 형변환시켜줌
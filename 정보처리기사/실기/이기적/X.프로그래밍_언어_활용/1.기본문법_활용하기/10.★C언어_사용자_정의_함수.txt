1) 부 프로그램
- 개념
    - 부 프로그램(Subprogram) : 주 프로그램이나 다른 부 프로그램에서 사용되는 독립된 형태의 단위 프로그램
    - C언어에서는 사용자 정의 함수를 통해 필요한 기능을 독립적인 단위로 구현해 사용할 수 있도록 정의한 후 호출해 사용함
- 특징
    - 부 프로그램을 선언할 떄 부 프로그램의 이름, 부 프로그램의 존재를 나타내는 키워드, 부 프로그램의 인자, 반환값, 부 프로그램에서 수행하는 기능이 필요함
    - 부 프로그램을 사용하면 프로그램의 크기가 줄어들고, 프로그램 수정이나 관리가 편리함
    - 코루틴(Coroutine) : 두 모듈이 같이 실행되면서 서호 호출되는 형태
- 프로그램 간의 자료 전달 방법
    - 전역 변수를 사용해 부 프로그램 간 공유 변수를 사용함
    - 전역 변수 사용 시 프로그램을 이해하기 상대적으로 어렵고 모든 프로그램 모듈에서 공유하므로 부작용으로 발생된 오류를 발견하거나 수정하기 어려워짐
        - 매개 변수를 사용하는 방법을 주로 사용함
    - 매개 변수 전달 방법
        - 주 프로그램(Caller)의 매개 변수를 부 프로그램(Callee)으로 전달하는 방법
        - C언어의 매개 변수 전달 방법 : 값 호출(Call by Value)과 참조 호출(Call by Address) 방법만 가능함
            - 값 호출 : 실제값이 전달됨 -> 부 프로그램의 가인수에 값이 복사됨
            - 참조 호출 : 매개 변수의 주소가 전달됨

2) 프로그래밍 언어의 유해 요소
- 별명(Alias)
    - 자료 객체는 생존 기간 중 여러 별명을 가질 수 있음
    - 일반적으로 별명은 프로그램의 이해를 매우 어렵게 함
    - 자료 객체가 여러 가지 별명을 갖는 경우 프로그램의 무결점 검증이 어려워짐
    - 같은 참조 환경에서 다른 이름으로 같은 자료 객체를 참조할 수 있는 언어의 경우, 프로그래머에게 심각한 어려움을 줄 수 있음
- 부작용(Side Effect)
    - 연산의 결과로 예상할 수 없을 정도로 다른 변수의 값이 변하는 경우를 의미함
    - 프로그램을 구성하는 함수에서 전역 변수를 사용해 함수의 결과를 반환하는 경우
        - 함수에 전달되는 입력 파라미터의 값이 같아도 전역 변수의 상태에 따라 함수에서 반환되는 값이 달라질 수 있는 현상
        
3) C언어의 사용자 정의 함수
- '함수 선언문 -> 함수 정의 -> 함수 호출'순으로 구현 및 사용해야 함

4) 부 프로그램 되부름(재귀 호출)
- 재귀 참수(Recursive Function)
    - 부 프로그램은 자기 자신을 호출할 수 있음
    - 부 프로그램의 첫 번째 활성화 레코드가 존재하는 동안 두 번째 활성 레코드가 생성될 수 있음
    - 재귀 호출은 내부적으로 스택 메모리를 통해 수행됨
        - 이를 수행하는 과정에서 문맥 교환(Context Switch)이 일어남
            - 반복 호출에 비해 재귀 호출이 더 수행시간이 느려짐
- 활성 레코드(Activation Recore)
    - 단위 프로그램이 활성화될 때마다 스택 메모리에 새로 생성되며 실행에 필요한 정보들을 가지고 있음
    - 활성 레코드 안에 들어가는 정보
        - 지역 변수(Local Variable)
        - 매개 변수(Parameter)
        - 복귀 주소(Return Address)
        
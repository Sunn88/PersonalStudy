출제빈도 상
빈출태그 : 시큐어 코딩 가이드 / 암호화 알고리즘

1) 시큐어 코딩 가이드의 개념
- 보안에 안전할 수 있는 프로그램 코드를 적용해 프로그램을 코딩하는 것
- 대표적인 웹 애플리케이션의 보안 취약점 발표 사례인 OWASP
    (Open Web Application Srcurity Project) TOP 10을 참고해 KISA에서 발표한 보안 약점 가이드
- 애플리케이션의 보안 취약점과 대응 방안이 구체적으로 서술된 문서
- 입력 데이터 검증 및 표현, 보안 기능, 시간 및 상태, 에러 처리, 코드 오류, 캡슐화,
    API 오용 등의 유형(시큐어 코딩 가이드 7항목)으로 분류함

2) 암호화 알고리즘
- 평문(plaintext)을 암호문(ciphertext)으로 바꾸고, 암호문을 다시 평문으로 바꿀 때 사용되는
    알고리즘
    - 평문 : 해독 가능한 형태의 메시지
    - 암호문 : 해독 불가능한 형태의 메시지
- 암호화(encryption) : 평문을 암호문으로 변환하는 과정
- 복호화(decruytion) : 암호문을 평문으로 변환하는 과정
- 암호화 및 복호화 과정에 암호키(Cryptographic key)가 필요함
- 암호 방식의 분류
    - 양방향
        - 대칭키 : 암호화키 = 복호화키
            - Stream 방식 : 1bit Stream 단위 연산, XOR 연산, H/W 구현이 쉬움
                - True Random#, OTPad
                - Pseudo Random#, RC4(PPTP, WEP, TKIP)
            - Block 방식 : 2bit 이상 블록 단위 연산, S/W 구현이 쉬움
                - Feistel 구조, DES, 3DES
                - SPN 구조, AES
                - 기타, IDEA
        - 비대칭키 : 암호화키 /= 복호화키
            - 인수분해 : RSA(디지털 서명, PGP), Robin
            - 이산대수 : DH(키 교환), ElGamal, DSA(디지털 서명)
            - 타원곡선방정식 : ECC

3) 비밀키(Private  Key, 대칭키) 암호화 기법
- 같은 키로 암호화하고 복호화하는 기법
- 대칭키 암호화 기법 또는 개인키 암호화 기법이라고도 함
- 암호화/복호화 속도가 빠르고 알고리즘이 단순함
- 키 분배가 공개키 암호화 기법보다 어려움
- 스트림 방식
    - 평문의 길이와 동일한 스트림을 생성해 비트 단위로 암호화함
    - 암호화할 떄 XOR 연산을 수행함
    - 종류 : RC4, A5/1, LSFR, SEAL, WEP, OFB
- 블록 방식
    - 평문을 블록 단위로 암호화하는 대칭키 암호 시스템
    - 종류
        - DES(Data Encryption Standard)
            - 1970년대 초 IBM이 개발한 알고리즘
            - 16라운드 Feistel 구조를 가짐
            - 평문을 64bit로 블록화하고, 실제 키의 길이는 56bit을 이용함
            - 전사 공격(Brute-Force Attack)에 취약함
        - AES(Advanced Encryption Standard)
            - DES를 대신해 새로운 표준이 됨
            - 블록 크기는 128bit이고, 키 길이는 128/192/256bit임
            - SPN(Substitution-Permutation Network) 구조
        - ARIA
            - 국내 기술로 개발된 암호 알고리즘
            - 경량 환경 및 하드웨어 구현에서의 효율성 향상을 위해 개발됨
            - 우리나라 국가 표준으로 지정됨
            - 블록 크기와 키 길이가 AES와 같음
        - SEED
            - 국내 기술로 개발된 128bit 블록 암호 알고리즘
            - Feistel 구조
            - 2005년 국제 표준으로 제정됨
        - IDEA
            - DES를 대체하기 위해 스위스에서 개발된 알고리즘
            - 상이한 대수 그룹으로부터의 세 가지 연산을 혼합하는 방식

4) 공개키(Public Key, 비대칭키) 암호화 기법
- 암호키와 해독키가 서로 다른 기법
- 비대칭키 암호화 기법 또는 공중키 암호화 기법이라고도 함
- 키 분배가 비밀키 암호화 기법보다 용이함
- 암호화/복호화 속도가 느리고 알고리즘이 복잡함
- RSA, ElGama, Rabin, ECC, DSS 기법 등이 있음
    - RSA(Rivest Shamir Adlemen)
        - 소인수 분해의 어려움에 기초를 둔 알고리즘
        - 1978년 MIT에 의해 제안됨
        - 전자문서에 대한 인증 및 부인 방지에 활용됨
    - ElGamal
        - 이산대수 문제의 어려움에 기초를 둔 알고리즘
        - 같은 메시지라도 암호화가 이루어질 때마다 암호문이 변경되고 암호문의 길이
            2배로 늘어나는 특징이 있음

5) 해시(Hash)
- 임의의 길이의 메시지를 입력으로 해 고정된 길이의 출력값으로 변환하는 기법
- 주어진 원문에서 고정된 길이의 의사 난수를 생성하며, 생성된 값을 해시값(해시 함수)이라고 함
- 디지털 서명에 이용되어 데이터 무결성을 제공함
- 블록체인에서 체인 형태로 사용되어 데이터의 신뢰성을 보장함
- SHA, SHA1, SHA256/224, SHA512/384, MD5, RMD160, HAS-160, RIPEMD 기법 등이 있음
    - SHA(Secure Hash Algorithm)
        - 1993년 미국 NIST에 의해 개발됨 -> 가장 많이 사용하고 있는 방식
        - SHA1은 DSA에서 사용하도록 되어 있으며 많은 인터넷 응용에서 default 해시 알고리즘으로
            사용됨
        - SHA256, SHA384, SHA512는 AES의 키 길이인 128, 192, 256 비트에 대응하도록 출력 길이를
            늘린 해시 알고리즘
    - MD5(Message-Digestalalgorithm 5)
        - 1992년 Ron Rivest에 의해 개발됨
        - MD5는 널리 사용된 해시 알고리즘이지만 충돌 회피성에서 문제점이 있다는 분석이 있으므로,
            기존 응용과의 호환으로만 사용하고 더 이상 사용하지 않고 있음
        - MD4와의 차이
            - MD4는 16단계의 3라운드를 사용하지만, MD5는 16단계의 4라운드를 사용함
            - MD4는 각 라운드에서 한 번씩 3개의 기약 함수를 사용하지만, MD5는 각 라운드에서
                한 번씩 4개의 기약 논리 함수를 사용함
            - MD4는 마지막 단계의 부가를 포함하지 않지만, MD5의 각 단계는 이전 단계의 결과에
                부가됨
    - HAS-160
        - 국내에서 개발된 대표적인 해시 함수
        - SHA와 설계 사상이 유사함
        - 기존 MD 계열의 해시 함수와는 차이가 존재함
        - 최근에 제안되는 다양한 해시 함수 분석 기법에 대해 아직은 안전성을 가지고 있음
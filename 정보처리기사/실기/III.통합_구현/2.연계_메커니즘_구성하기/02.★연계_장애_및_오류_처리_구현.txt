출제빈도 중

1) 연계 장애 및 오류 유형
- 연계 시스템 오류 : 연계 서버의 실행 여부를 비롯해 송수신, 전송 형식 변환 등 서버의 기능과
    관련된 장애 및 오류
- 송/수신 시스템의 연계 프로그램 오류 : 데이터 추출을 위한 DB 접근 시 권한 불충분, 데이터 변환 시 예외처리 미처리 등 연계 프로그램 구현상의 오류
- 연계 데이터 자체 오류 : 송신 시스템에서 추출된 연계 데이터가 유효하지 않은 값으로 인한 오류

2) 연계 장애 오류 처리 방안
- 오류 유형
    - 연계 서버
        - 내용 : 서버의 기능과 관련된 장애 및 오류 -> 연계 서버의 실행 여부를 비롯해 송수신, 전송 형식 변환 등
        - 처리 방안 : 연계 서버(엔진)의 로그를 확인해 원인 분석 후 처리
        - 예시 : 미가동, 송수신 시스템의 아이피 및 포트 접속이 불가한 경우
    - 연계 데이터
        - 내용 : 연계 데이터가 유효하지 않은 값으로 인한 오류
        - 처리 방안 : 송신 시스템 연계 프로그램에서 기록하는 Log를 확인해 데이토 보정 후 재전송
        - 예시 : 유효하지 않은 일자의 경우
    - 송신 시스템 연계 프로그램
        - 내용 : 송신 시스템 연계 프로그램 구현상의 오류 -> 데이터 추출을 위한 DB 접근 시 권한 불충분, 데이터 변환 시 예외(Exception) 미처리 등
        - 처리 방안 : 송수신 시스템 연계 프로그램에서 기록하는 Log를 확인해 원인 분석 후 결과에 따른 처리, 처리 이후 데이터 전송이나 반영 재작업
        - 예시 : 등록되지 않은 코드로 매핑이 불가한 경우
    - 수신 시스템 연계 프로그램
        - 내용 : 수신 시스템 연계 프로그램 구현상의 오류 -> 운영 DB에 반영하기 위한 DB 접근 권한 불충분, 데이터 변환 및 반영 시 예외 미처리 등
        - 처리 방안 : 송수신 시스템 연계 프로그램에서 기록하는 Log를 확인해 원인 분석 후 결과에 따른 처리, 처리 이후 데이터 전송이나 반영 재작업
        - 예시 : 등록된 데이터가 존재하지 않는 경우

3) 연계 구간별 오류 발생 시점과 오류 기록
- 구간
    - 송신 시스템
        - 오류 발생 시점
            - 데이터 생성 및 추출
            - 코드 매칭 및 데이터 전환
            - 연계 테이블 등록
        - 오류 기록 테이블
            - 연계 프로그램에서 정의한 로그 및 오류 로그 테이블
            - 연계 테이블의 일부 관리 용도 항목
        - 오류 로그 기록 주체 : 별도 구현한 송신용 연계 프로그램
    - 연계 서버
        - 오류 발생 시점
            - 송신 시스템 연계 테이블의 연계 데이터 Load 및 전송 형식으로 변환 시
            - 송수신 시
            - 수신한 전송 형식을 수신 시스템 연계 테이블 형식으로 변환 및 Load 시
        - 오류 기록 테이블 : 연계 서버에서 설정된 로그 및 오류 로그 테이블
        - 오류 로그 기록 주체 : 연계 서버 또는 중계 서버
    - 수신 시스템
        - 오류 발생 시점
            - 연계 테이블의 연계 데이터 Load
            - 코드 매핑 및 데이터 변환
            - 운영 DB에 반영
        - 오류 기록 테이블
            - 연계 프로그램에서 정의한 로그 및 오류 로그 테이블
            - 연계 테이블의 일부 관리 용도 항목
        - 오류 로그 기록 주체 : 별도 구현한 수신용 연계 프로그램

4) 연계 장애 및 오류의 확인과 처리 절차
- 장애 및 오류 현황 모니터링 화면을 이용한 확인 -> 장애 및 오류 구간별 로그 확인 및 원인 분석 -> 로그 장애(오류) 조치 -> 필요한 시 재작업(전송 또는 반영 재처리)

5) 연계 데이터 보안
- 송/수신 시스템 간 데이터 전송 시에 연계 데이터는 보안에 취약해지게 되며, 이런 보안 취약점에 대해 보안을 적용하도록 함
- 연계 데이터 보안은 전송 구간에 암호화를 적용해 구현함

6)암호화키 형태 분류
- 비대칭키(공개키) 암호화
    - 개념 : 암/복호화 키가 다름
    - 암호화키 : 공개
    - 복호화키 : 비밀
    - 비밀키 전송 : 불필요
    - 목적 : 대칭키 교환
    - 키 개수 : 2N
    - 암호화 속도 :  상대적으로 저속
    - 알고리즘 : RSA, ECC, Rabin, Schnorr, Diffil-Hellman, El Gamal, DSA, KCDSA, Knapsack
    - 장점
        - 대칭키 암호 시스템보다 확장 가능성이 좋음
        - 인증과 부인 방지 기능을 제공함
        - 범용적으로 사용이 가능함
    - 단점
        - 대칭키 시스템보다 더 큰 길이의 키를 사용해야 함
        - 고도의 수학적 연산으로 인해 암호화 처리 시간이 길고, 공개키 배포에 대한 신뢰성 문제가 존재해 PKI와 같은 공개키 관리 구조가 필요함
- 대칭키(비밀키) 암호화
    - 개념 : 암/복호화 키가 같음
    - 암호화키 : 비밀
    - 복호화키 : 비밀
    - 비밀키 전송 : 필요
    - 목적 : 데이터 암호화
    - 키 개수 : N(N-1)/2
    - 암호화 속도 : 상대적으로 고속
    - 알고리즘 : DES< 3DES, SEED, AED, IDEA, blowfish, RC4, RC5, RC6, ARIA
    - 장점
        - 키 크키가 상대적으로 작음
        - 암호 알고리즘 내부 구조가 단순해 시스템 개발환경에 적용이 쉬움
        - 비대칭키에 비해 암/복호화 속도가 빠름
    - 단점
        - 교환 당사자 간에 동일한 키를 공유해야 하므로 키 관리가 어려움
        - 키 변경이 자주 있을 경우 불편하며, 중재자가 필요함

7) 암호화 정보 단위별 분류
- 블록 암호화
    - 평문을 블록 단위로 분리하고, 블록마다 암호화 과정을 통해 고정된 크기의 블록 단위의 암호문을 생성하는 방식
    - 대칭키(비밀키), 비대칭키(공개키) 암호화 방식 모두 적용할 수 있어 복합 암호화 방식이라고도 함
    - 알고리즘 : DES, SEED, ARIA, AES
- 스트림 암호화
    - 대칭키 암호의 구조 중 하나로, 유사난수를 연속적(스트림)으로 생성해 암호화하려는 자료와 결합하는 구조를 가짐
    - 하드웨어 구현이 간편하며 속도가 빠르므로 무선 통신 등의 환경에 주로 사용됨
    - 알고리즘 : LFSR, SEAL, RC4

8) 암호화 기술 분류
- 해시
    - 해시 함수의 일종으로, 해시값으로부터 원래의 입력값과의 관계를 찾기 어려운 성질을 이용한 암호화 방식
    - 임의 길이 메시지를 고정 길이 출력값으로 변환해 암호화하는 방식
    - 해시 함수가 가져야 하는 성질
        - 역상 저항성(preimage resistance)
        - 제2 역상 저항성(second preimage resistance)
        - 충돌 저항성(collision resistance)
    - 알고리즘 : MD5, SHA-1, 2
- SPN
    - 샤논의 "여러 개 함수를 중첩하면 개별 함수로 구성된 암호화보다 안전하다"는 이론에 근거한 암호화 방식
    - 전치와 치환을 이용해 관용 암호 방식으로 문제를 해결하는 방식
    - 알고리즘 : AES, ARIA
- 파이스텔(Feistel)
    - 블록 암호화 방식의 일종이며, 특정 계산 함수의 반복으로 이루어짐
    - N비트 블록을 둘로 나누고 R번 라운드만큼 반복 연산하는 암호화 방식
    - 알고리즘 : DES< SEED
- 인수분해
    - 두 큰 소수 p와 q의 곱으로부터 p, q를 추출하기가 어렵다는 점을 이용한 암호화 방식
    - 알고리즘 : RSA
- 타원 곡선
    - 타원 기반 안정성과 효율성을 이용한 암호화 방식
    - 알고르짐 : ECC
- 이산대수
    - 이산대수 계산은 어렵지만 그 역/지수함수 계산은 빠르게 수행할 수 있다는 특징을 이용한 암호화 방식
    - 알고리즘 : Diffie-Hellman, DSA
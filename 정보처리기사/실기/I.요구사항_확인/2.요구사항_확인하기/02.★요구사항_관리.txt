출제빈도 중

1) 요구사항 관리의 개념
- 요구사항 도출, 분석, 명세, 확인 단계에서의 모든 요구사항 개발 프로세스의 주요 이슈 관리 진행
- 요구사항 협상, 요구사항 기준선, 요구사항 변경관리, 요구사항 확인의 세부사항으로 구분함

2) SDLC 요구사항 관리 절차
- SDLC(Software Development Life Cycle, 소프트웨어 생명주기)
    - 소프트웨어의 생성부터 소멸까지의 정의 단계, 개발 단계, 유지 보수 단계로 구분한 것
- 요건 정의 단계
    - 준비 및 자료 수집
        - 현행 업무 분석서
        - 현행 시스템 분석서
        - 사용자 인터뷰 결과서
    - 요구사항 협상
    - 요구사항 확인 및 확정(요구사항 기준선)
        - 요구사항 정의서 작성
    - 요구사항 관리
        - 요구사항 추적서를 통한 요구사항 관리
- 분석 단계
    - 요구사항 변경 관리
- 설계 단계
- 구현 단계
- 테스트 단계

3) CMMi(Capability Maturity Model Integration)
- 미국 카네기 멜런 대학의 소프트웨어 공학 전문 연구소의 지침
- 단체나 조직에서 소프트웨어를 개발하고 운영하는 성숙도 능력이 어느 정도인지를 규정하는 지침
- CMMi 5단계
    - 초기(Initial) 단계
    - 관리(Managed) 단계 : 요구사항 협상 -> 요구사항 기준선 -> 요구사항 변경관리 -> 요구사항 확인
    - 정의(Defined) 단계
    - 정량적 관리(Quantitatively Managed) 단계
    - 최적화(Optimizing) 단계

4) 요구사항 관리 프로세스
- 요약
    - 요구사항 협상
        - 요청자의 모든 요구사항을 목록화하고 실제 구현 가능한 사항을 협상에 따라 검토하는 과정
        - 가용한 자원과 수용 가능한 위험 수준에서 구현할 수 있는 기능을 협상하도록 함
    - 요구사항 베이스라인(기준선)
        - 최종 도출된 요구사항 명세서는 기준선이 되며 추후 과정인 분석 설계 구현의 지침이 됨
        - 공식적으로 합의되고 검토된 요구사항 명세서를 결정해야 함
    - 요구사항 변경관리
        - 기준선은 변경이 통제되며 절차에 의해 변경되어야 함
        - 요구사항 기준선을 기반으로 모든 변경을 공식적으로 통제함
    - 요구사항 확인 및 검증
        - 요구사항 확인 : 앞에서 학습한 광의의 요구사항 확인이 아닌 요구사항 관리하의 합의적인 개념
        - 요구사항이 최종 시스템에 반영되었는지 확인하는 절차
        - 구축된 시스템이 이해관계자가 기대한 요구사항에 부함되는지 확인
- 요구사항 협상(Requirement Negotiation)
    - 이해관계자들 간의 상충하는 내용을 요구하거나, 요구사항/자원, 기능/비기능 요구사항들이 서로 상충하는 경우 협상을 통해 합의함
    - 한 쪽을 지지하기보다는 적절한 절충(Trade off) 지점에서 합의가 중요함
    - 각각의 우선순위를 부여하고 중요 요구사항을 필터링한 후 문제를 해결함
    - 협상을 위한 요구사항 수집 절차
        - 이해관계자 식별 -> 업무 요구사항 추출 계획 작성 -> 사용자 요구사항 추출 계획 작성 -> 요구사항 추출 관계 계획 작성
        - 수집된 모든 요구사항에 대해 라스트 작업을 수행함
        - 모든 요구사항에 대해 다양한 관점에서 분석함
        - 요구사항에 대한 분류 : 수용, 일부 수용, 대체, 수용 불가 등으로 구분함
    - 정형 분석(Formal Analysis)
        - 구문(Syntax)과 형식적으로 정의된 의미(Semantics)를 지닌 언어로 요구사항을 표현함
        - 정확하고 명확하게 표현해 오해를 최소화할 수 있음
        - 요구사항 분석의 마지막 단계에서 이루어짐
- 요구사항 베이스라인(Base Line, 기준선)
    - 이해 당사자 간에 명시적으로 합의한 내용이며 프로젝트 목표 달성 여부를 확인하는 기준
    - 요구사항을 조기에 명확히 확정하고, 추후 발생 가능한 변경사항을 체계적으로 관리하기 위한 기준
    - 요구사항 정의서의 내용으로 추후 모든 프로젝트 단계의 기준이 됨
    - 요구사항 정의서
        - 사용자와 요구자의 요구사항을 정리해 순서대로 ID를 부여해 리스트로 작성한 문서 -> 요구사항 명세서
        - 요구사항 정의 단계의 필수 문서
        - 요건 정의, 분석, 설계, 구현, 테스트, 이관 등 모든 과정을 진행하면서 진행되어 왔던 내용을 참고하는 기본 자료가 됨
        - 소프트웨어(정보시스템)의 요구자 도는 사용자의 요구사항을 정리 및 기록한 문서
- 요구사항 변경 관리
    - 요구사항을 인수책임자와 합의하고 관리해 프로젝트의 계획 및 실행을 요구사항에 적합하도록 진행함
    - 계획 범위에 속하거나 속하지 않는 모든 변경의 영향력을 분석하는 변경통제를 효율적으로 운영할 수 있음
    - 고객 요구사항을 기록하고 변경 발생 시 적절하게 통제해 프로젝트에서 미치는 부정적인 영향력을 최소화할 수 있도록 함
    - 요구사항 변경관리 시 확인사항
        - 형상관리(변경통제 및 추적관리)와 연계해 관리되도록 하며 프로젝트 계획, 작업 산출물 및 모든 활동을 위한 기준으로 사용함
        - 고객의 요구사항은 문서로 만들어 요구사항의 일관성을 유지할 수 있도록 하는 것이 목적
            - 요구사항 변경으로 인항 영향력 평가, 분석 및 문서로 만들어 종결까지 추적함
        - 작업 산출물의 통제가 필요한 경우, 소프트웨어 형상관리 항목으로 관리함
        - 요구사항을 도출하거나 변경할 경우, 조직의 방침을 충분히 검토할 책임자의 주도로 진행함
        - 요구사항에 대한 변경을 검토 및 구현하고 변경통제를 진행하며 요구사항 변경으로 인한 프로젝트 계획, 산출물 및 활동들의 변경사항을 식별함
    - 요구 변경사항 관리 절차
        - 요구 변경사항 접수 -> 요구 변경사항 분석 -> 요구 변경사항 영향력 분석 -> 요구 변경사항 수용 여부 결정 -> 변경사항의 변경통제 순으로 진행
        - 변경통제는 변경통제위원회(CCB) 등 의사결정 회의기구를 통해 최초 요구사항의 확정 및 확정된 요구사항의 변경을 수행하도록 함
            - CCB(Change Control Board)의 특징
                - CCB의 구성, 권한 역할은 변경관리계획서에 기술함
                - CCB의 결정사항들은 문서화하여, 정보 제공 및 후속 조치를 위해 이해관계자들에게 전달해야 함
                - CCB는 형상관리 활동을 검토할 수도 있음
        - 요구 변경사항 식별 후 분석을 하고 최종적으로 변경에 대한 통제까지 포함함
- 요구사항 확인(Validation)
    - 개발 대상은 자원을 요구사항 명세에 할당하기 전 요구사항 명세서가 완전하게 구성되었는지를 검토하는 활동
    - 요구분석가가 요구사항을 정확히 이해한 뒤 요구사항 명세서를 작성하였는지 확인(Validation)하는 것이 중요함
    - 내용의 일관성, 기준 적합성, 누락 기능의 여부, 이해도 등을 검증(Verification)하는 것이 중요함
        - 검증과 확인
            - 검증(Verification) 테스트 : 제품이 명세서대로 완성되었는지 검증하는 단계 -> 개발자의 시각에서 제품의 생산 과정을 테스트하는 것
            - 확인(Validation) 테스트 : 사용자의 요구사항을 잘 수행하고 있는지 사용자의 시각에서 생산된 제품의 결과를 테스트하는 것    
    - 요구사항 확인 중 도출된 문서들의 형상관리를 수행함
- 요구사항 검증(Verification)
    - 요구사하을 기준으로 정보시스템을 최종 구현한 후 테스트/인수 시점에 요구사항이 제대로 반영되었는지 확인하는 단계

5) 인수 테스트
- 요구사항 변경 관리하에서 SDLC상의 최종 테스트와 인수 테스트 과정 중 요구사항을 확인하는 단계
- 사용자 측 관점에서 소프트웨어가 요구사항을 충족시키는지 평가하는 절차
- 소프트웨어가 고객의 합리적인 기대에 따라 제 기능을 발휘하는지를 테스트
- 인수 시 각 요구사항의 확인 절차를 계획해야 함
- 종류 : 계약 인수 테스트, 규정 인수 테스트, 알파 테스트, 베타 테스트, 사용자 인수 테스트, 운영 인수 테스트
    - 알파 테스트
        - 개발사 내에서 진행하는 테스트
        - 개발자 관점에서 수행됨
        - 개발자는 사용상의 문제를 기록해 반영되도록 함
    - 베타 테스트
        - 선정된 다수의 사용자가 자신들의 사용 환경에서 일정 기간 사용하면서 테스트
        - 문제점이나 개선 사항 등을 기록하고 개발 조직에 통보해 반영되도록 하는 테스트
- 요구사항 명세서는 인수 테스트 계획의 기준이 되고, 인수 테스트는 요구사항 확인의 주요 절차임

6) 모델 품질 검증(Model Certification)
- 분석 단계에서 개발된 모델의 품질을 검증함
- 정적 분석(Static Analysis)
    - 객체 모델에서 객체들 사이에 존재하는 Communication Path(의사소통 경로)를 검증하기 위해 사용함
    - 명세의 일관성과 정확성을 확인, 분석하는 도구
- 동적 분석(Dynamic Analysis)
    - 직접 실행을 통해 모델을 검증하는 방식
- 요구사항 검토
    - 여러 검토자가 에러, 잘못된 가정, 불명확성, 표준과의 차이를 검토함
    - 고객 중심 프로젝트에서는 검토자 그룹에 고객 대표자가 1명 이상 포함되어야 함
    - 시스템 정의서, 시스템 설명서, 소프트웨어 요구사항 명세서를 완성한 시점에서 검토함

7) 테스트 레벨
- 애플리케이션 개발 단계에 따라 단위 테스트, 통합 테스트, 시스템 테스트, 인수 테스트, 설치 테스트로 분류함
- 애플리케이션을 전체적으로 테스트하려는 테스트 활동의 묶음
- 각각의 테스트 레벨은 서로 독립적이며, 각각 다른 테스트 계획과 전략을 필요로 함
출제빈도 중
- 와이어 프레임, 목업, UI 프레임워크

1) 와이어 프레임(Wireframe)
- 제품을 구성하는 서로 다른 레이아웃을 정적이면서 간단한 표현 상태로 재현한 것을
- 와이어로 설계된 모양 -> 간단한 와이어를 사용해 인터페이스를 시각적으로 묘사함
- 기획 단계 초기에 작성하며, 구성할 화면의 대략적ㅇ니 레이아웃이나 UI 요소 등의 틀(Frame)을 설계하는 단계
- 개발 관계자(디자이너, 개발자, 기획자) 사이의 레이아웃 협의, 현재 진행 상황 등을 공유할 떄 사용함
- 와이어 프레임 툴 : 핸드라이팅, 파워포인트, 키노트, Sketch, Balsamiq, Moqups, Adobe Experience Design, 카카오 오븐

2) 목업(Mockup)
- 와이어 프레임보다 좀 더 실제 제품과 유사하게 만들어지는 실물 크기의 정적 모형
- 시각적으로만 구현됨
- 목업 툴 : 카카오 오븐, Balsamiq Mockup, Power Mockup

3) UI Prototype
- UI Prototype의 개념
    - 새로운 시스템 개발 시 설꼐, 성능, 구현 가능성, 운용 가능성을 평가하거나 요구사항을 좀 더 구체화하는 도구
    - 요구사항을 분석해 전체적인 기능을 간략화해 동적인 형태로 구현한 모형
    - 도출된 요구사항을 토대로 프로토타입(시제품)을 제작해 대상 시스템과 비교하면서 개발 중에 도출되는 추가 요구사항을 지속해서 재작성하는 과정
    - 수정 보완의 반복 작업을 통해 시스템 설계 및 개발에 소요되는 비용과 노력을 줄일 수 있음
    - 와이어 프레임, 스토리보드에 Interaction을 적용한 것
    - UI Prototype 툴 : HTML/CSS, Axure, Invision Studio, 카카오 오븐, Flinto, 네이버 Proto Now
- 프로토타입 장단점
    - 장점
        - 사용자 설득과 이해가 쉬움
        - 개발시간이 감소함
        - 오류를 사전에 발견할 수 있음
    - 단점
        - 수정이 많아지면 작업시간이 늘어날 수 있음
        - 필요 이상으로 자원을 많이 소모함
        - 정확한 문서 작업이 생략되는 문제가 발생할 수 있음
- 프로토타입 작성 도구 및 방법
    - Analong
        - 포스트잇, 칠판, 종이, 펜 등을 이용함
        - 소규모 개발, 제작비용과 기간이 짧을 경우 빠른 업무협의가 필요한 경우에 사용함
        - 비용이 저렴하면서 즉시 변경이 가능함
        - 회의 중 바로 작성할 수 있으나 공유가 어려움
        - 상호 연관 관계가 복잡한 경우 표현이 어려움
    - Digital
        - PowerPoing, Acrobat, Invision, Marvel, Adobe Xd, Flinto, Principle, Keynote, UX pin, HTML 등의 SW 툴을 이용함
        - 재사용성이 높지만 도구를 다룰 줄 아는 전문가가 필요함
        - 목표 제품과 비슷하게 테스트할 수 있으며 수정이 수월함
- UI Prototype 작성 시 고려사항
    - 프로토타입 계획 작성
        - 프로토타입 작성의 전체적인 계획 확립
    - 프로토타입 범위 확인
        - 프로젝투 범위, 위험 상황, 목적을 명확히 하며 환경적 바탕이 준비되었는지 확인
        - 별도의 프로토타입 팀을 구성할 수 있는지 확인
    - 프로토타입 목표 확인
        - 목표가 기능과 관련된 것인지, 성능과 관련된 것인지, 개발 환경에 관련된 것인지 고객과 협의해 목표를 명화하함
    - 프로토타입 기간 및 비용 확인
        - 가능한 투입 기간 및 비용이 경제적으로 목적에 달성할 수 있도록 계획함
        - 검증 범위와 기간 등이 과도하면 고객 목표가 비대화되어 문제가 될 수 있음
    - 프로토타입 산출물 확인
        - 실제 개발에 참조될 수 있어야 하나 아키텍처 요소 검증을 위한 것이므로 실제 개발에서는 참고 수준으로 활용함
    - 프로토타입 유의사항 확인
        - 작은 범위와 소수 인원으로 최소기간 내 위험요소 식별 및 해결을 위한 것이므로 범위나 시간을 과도하게 설정하지 않도록 주의함(목표 비대 가능성)
- UI Prototype 계획 시 고려사항
    - 프로토타입 목표 확인
        - 아키텍처 검증(성능, 안정성, 개발 생산성), 가이드 확정, 환경 세팅 완료, 공통 모듈 확보, 인력 양성 등을 확인
    - 프로토타입 환경 확인
        - 개발에 필요한 개발 도구, 테스트 도구, 빌드 및 배포 도구, 형상관리 등을 마련하고 개발용 서버를 도입함
    - 프로토타입 일정 확인
        - 대형 프로젝트 기준 1개월 정도로 하고, 목적이 분석이나 설계 가이드 검증일 경우 2개월 추가할 수 있음
        - 프로토타입 범위 확인 및 아키텍처의 핵심요소를 범위로 설정함
        - 프로토타입 인원을 확인함
    - 프로토타입 범위 확인
        - 아키텍처의 핵심 요소에 해당하는 UI를 프로토타입의 범위로 설정함
        - 아키텍처 요소 중에 검증되지 않은 요소와의 연동 등 위험이 많은 요소를 범위 설정함
        - 다수의 개발자들이 참여해 개발하는 부분인지 확인해 기준으로 삼음
    - 프로토타입 인원 확인
        - 리더 1인, 솔루션 담당자 파트타임 2인 이상, 인프라 담당자 파트타임 1인, 개발 환경 리더 겸 공통 모듈 개발자 1인, 프로토타입 개발자 3~4인으로 함
    - 프로토타입 아케틱처 검증 확인
        - 기존 아키텍처가 요구사항을 만족하는지 성능을 측정함
    - 프로토타입 이슈 및 해결
        - 아키텍처 요소 검증 중 대다수 발생하는 이슈를 취합해 보고하고 프로토타입 리더가 매일 이슈 취합 및 해결 방안을 제시함
    - 프로토타입 가이드 확정
        - 가능한 모든 가이드를 저용해 표준 가이드를 최종적으로 확정함
    - 프로토타입 개발 생산성 확인
        - 진행 시 시간이 많이 소요되는 부분(분석, 설계, 개발, 테스트 등)의 원인을 찾아 바로잡음
    - 프로토타입 결과 시연
        - 화면 위주가 아닌 분석, 설계 개발 테스트 과정을 모두 고객, PM, PL, 개발자에 시연함
- UI Prototype 제작 단계
    - 사용자 요구 분석
        - 요구사항이 확정될 떄까지 사용자 관점에서 기본적인 요구사항을 확인하는 단계
        - 실 사용자 입장에서 분석함
    - 프로토타입 작성
        - 시스템의 핵심 기능을 중심으로 종이나 다지털 도구를 이용해 작성함
    - 프로토타입 사용자 테스트
        - 요구사항을 추가 보완함
    - 수정과 합의 단계
        - 프로토타입 결과를 토대로 사용자가 요청한 제안사항을 포함하고 보완하는 단계
        - 결과물 완성 후 3단계로 되돌아감(사용자 승인 시까지 반복)
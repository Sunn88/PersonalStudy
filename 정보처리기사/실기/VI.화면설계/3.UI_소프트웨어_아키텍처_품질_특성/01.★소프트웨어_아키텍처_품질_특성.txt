출제빈도 중

1) 소프트웨어 아키텍처(Software Architecture)
- 아키텍처 : 소프트웨어를 구성하는 컴포넌트들의 상호작용 및 관계, 각각읱 ㅡㄱ성을 기반으로 컴포넌트들이 상호유기적으로 결합하는 소프트웨어의 여러 가지 원칙들의 집합
- 개념
    - 다수의 이해관계자가 참여하는 복잡한 개발에서 상호 이해, 타협, 의사소통을 체계적으로 접근하기 위해 개발 대상 소프트웨어의 기본 틀(뼈대)을 만드는 것
    - 전체 시스템의 전반적인 구조를 체계적으로 설계하는 것
- 소프트웨어 아키텍처의 품질 특성
    - 소프트웨어의 기능, 성능, 만족도 등의 요구사항을 얼마나 충족하는가를 나타내는 소프트웨어 특성의 핵심 집합
    - 사용자의 요구사항을 얼마나 충족시키느냐에 따라 확립됨
    - ISO/IEC 9126 모델에 정의되어 있음

2) ISO/IEC 9126 모델
- 개념
    - 소프트웨어 품질 특성과 평가를 위한 국제 표준
    - 2011년 9126 모델에 호환성과 보안성을 추가해 발표함
    - 내/외부 품질은 기능성(기능 적합성), 신뢰성, 사용성 효율성(실행 효율성), 유지보수성, 이식성으로 구분됨
        - 기능성 : 요구된 기능이 제공되었는가?
        - 신뢰성 : 믿을만한 소프트웨어인가?
        - 사용성 : 사용하기 쉬운 소프트웨어인가?
        - 효율성 : 얼마나 효율적인 소프트웨어인가?
        - 유지보수성 : 수정이 용이한 소프트웨어인가?
        - 이식성 : 환경 전환이 용이한가?
    - 사용 품질은 효과성, 생산성, 안전성, 만족도로 구분됨
- 분류
    - ISO/IEC 9126-1(품질 모델)
        - 6가지 품질 특성과 소프트웨어 제품의 품질 평가를 위한 프레임워크를 정의함
    - ISO/IEC 9126-2(외부 품질)
        - 개발자를 위한 표준으로 개발자, 평가자, 구매자가 품질 특성에 대해 사용할 수 있는 외부 메트릭스(external metrics)를 제공함
        - 완성된 소프트웨어의 성능, 오류 발생, 사용 용이성 등이 해당됨
    - ISO/IEC 9126-3(내부 품질)
        - 구매자를 위한 표준으로 개발자, 평가자, 구매자가 소프트웨어 제품 품질을 평가할 수 있도록 도와주며, 해당 소프트웨어 제품을 완성하기 전에 미리 품질의 문제점들을 지적해줌
        - 품질 특성에 대해 사용할 수 있는 내부 메트릭스를 사용해 중간 제품이나 인도된 소프트웨어 제품의 정적인 성질을 분석함으로써 내부 속성을 측정하거나 외부 속성을 보여줌
            - 내부 메트릭스(internal metrics)의 목적 : 요구된 외부 품질이 성취되었는지를 확인하는 것 -> 소프트웨어 개발이 진행 중인 설계와 구현 단계에 적용됨
    - ISO/IEC 9126-4(사용 품질)
        - 사용자를 위한 표준으로 사용 품질(quality in use)을 정의함
        - 제품이 특정 환경에서 사용될 때 사용자의 작업 효율성, 생산성, 안전성, 만족도 등 사용자의 요구를 충족시키는 정도를 말함
        - 소프트웨어 자체의 특성보다 사용자의 경험을 측정함
- 품질 특성 및 하위 특성 분류도
    - ISO/IEC 품질 특성
        - 내/외부 품질
            - 기능성
                - 적합성
                - 정확성
                - 상호운용성
                - 보안성
            - 신뢰성
                - 성숙성
                - 결함수용성
                - 회복(복구)성
            - 사용성
                - 이해성
                - 학습용이성
                - 운용성
                - 친밀성
            - 효율성
                - 시간효율(반응)성
                - 자원활용(효율)성
            - 유지보수성
                - 분석(용이)성
                - 변경(가능)성
                - 안정성
                - 테스트용이성
            - 이식성
                - (환경)적응성
                - 설치(가능)성
                - 대체(가능)성
                - 공존(병행)성
        - 사용 품질
            - 효과성
            - 생산성
            - 안전성
            - 만족도
- 사용자, 개발자 관점별 고객의 체감 불만 정도 그래프
    - 기능성(Functionality) : 사용자의 요구사항을 정확하게 만족하는 기능을 제공하는지 시스템의 동작을 관찰하기 위한 품질 기준 -> 사용자 관점 높음, 고객의 체감 불만 정도 높음
        - 적절성(Suitability) : 사용자의 목적 달성을 위해 적절한 기능을 제공할 수 있는 능력
        - 정밀성(Accuracy) : 올바른 혹은 동의된 효능 결과를 제공할 수 있는 능력
        - 상호 운용성(Interoperability) : 하나 이상의 명세된 시스템과 상호작용할 수 있는 능력
        - 보안성(Security) : 권한이 없는 사람 혹은 시스템은 정보를 읽거나 변경하지 못하도록 정보를 보호하는 능력
        - 호환성(Compliance) : 응용과 관련된 표준, 관례 또는 법적 규제 및 유사한 규정을 고수하는 능력
    - 신뢰성(Reliability) : 명세된 조건에서 사용될 때, 성능 수준을 유지할 수 있는 소프트웨어 제품의 능력을 평가하기 위한 단위
        - 성숙성(Maturity) : 소프트웨어 내의 결함으로 인한 고장을 피해가는 능력
        - 고장 허용성(Fault tolerance) : 소프트웨어 결함이 발생했을 때 명세된 성능 수준을 유지할 수 있는 능력
        - 회복성(Recoverability) : 고장 발생 시 명세된 성능 수준을 재유지하고 직접적으로 영향받은 데이터를 복구하는 능력
    - 사용성(Usability) : 명세된 조건에서 사용될 경우, 사용자에 의해 이해, 학습, 사용 등 사용의 수월성 관점에서 제품의 능력을 평가하기 위한 단위
        - 이해성(Understandability) : 특정 작업과 사용 조건에서 어떻게 사용될 수 있는지를 사용자가 이해할 수 있도록 하는 능력
        - 학습성(Learningability) : 사용자가 그 응용을 학습할 수 있도록 하는 능력
        - 운용성(Operability) : 사용자가 소프트웨어 제품을 운영하고 제어할 수 있도록 하는 능력
        - 친밀성(Intimacy) : 사용자에 의해 선호되는 소프트웨어 제품의 능력
    - 효율성 : 명시된 조건에서 사용되는 자원의 양에 따라 요구된 성능을 제공하는 소프트웨어 제품의 능력을 평가하기 위한 단위
        - 시간 반응성 : 명시된 조건에서 그 기능을 수행할 때 적절한 반응 및 처리 시간과 처리율을 제공하는 능력
        - 자원 활용성 : 명시된 조건에서 그 기능을 수행할 때 적절한 양과 종류의 자원을 사용하는 능력
    - 유지보수성 : 요구사항을 개선하고 확장하는 데 있어 얼마나 용이한가를 평가하기 위한 단위
        - 분석성 : 소프트웨어의 결함이나 고장의 원인 혹은 변경될 부분들의 식별에 대한 진단을 가능하게 하는 소프트웨어 제품의 능력
        - 변경성 : 변경 명세가 구현될 수 있도록 하는 능력
        - 안정성 : 소프트웨어가 변경으로 인한 예상치 않은 결과를 최소화하는 능력
        - 시험성 : 변경된 소프트웨어가 확인될 수 있는 능력
    - 이식성 : 현재 환경에서 다른 환경으로 변경될 수 있는 능력을 평가하기 위한 단위
        - 적응성 : 대상 소프트웨어에서 이 목적으로 제공되는 것 이외의 활동 혹은 수단을 적용하지 않고 다른 명세된 환경으로 변경될 수 있는 능력 -> 개발자 관점 높음, 고객의 체감 불만 정도 낮음
        - 설치성 : 명세된 환경에 설치될 수 있는 소프트웨어 제품의 능력
        - 공존성 : 공통 자원을 공유하는 공동 환경에서 다른 독립적인 소프트웨어와 공존할 수 있는 능력
        - 대체성 : 동일한 환경에서 동일한 목적으로 다른 지정된 소프트웨어 제품을 대신해 사용할 수 있는 능력
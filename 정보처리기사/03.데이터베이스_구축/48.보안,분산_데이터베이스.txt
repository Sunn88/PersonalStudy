1) 보안
- 보안(Security)의 개념 : 권한이 없는 사용자로부터 데이터베이스를 보호하는 것
- 암호화(Encryption)
    - 네트워크를 통하거나 컴퓨터 내부에 자료를 저장할 때 권한을 가진 사람 외에는 데이터를 보지 못하도록 하는 것
    - 일반 평문을 다양한 방식의 암호화 기법으로 가공해 저장하거나 전송 권한이 있는 사용자에 의해 복호화되어 사용함
2) 암호화 기법
- 비밀키(private Key, 대칭키) 암호화 기법
    - 비밀키 암호화 기법은 동일한 키로 데이터를 암호화하고 복호화함
    - 암호화, 복호화 키가 같아서 키를 공개하면 타인이 알게 됨
    - 암호화와 복호화 속도가 빠름
    - 대칭 암호 알고리즘은 처음 통신시에 비밀키를 전달해야 하므로, 키 교환 중 키가 노출될 수 있음
    - 종류 : DES, AES, ARIA, SEED, IDEA, RC4
- 공개키(Public Key, 비대칭키) 암호화 기법
    - 공개키 암호화 기법은 각기 다른 키로 데이터를 암호화하고 복호화함
    - 암호화, 복호화 키가 다르므로 키는 공개되어도 됨
    - 암호화 및 복호화 속도가 느림
3) 권한 부여 기법
- GRANT
    - 데이터베이스 사용자에게 사용 권한을 부여함
    - 기본 구조 : GRANT 권한 ON 데이터 객체 TP 사용자 [WITH GRANT OPTION]
    - WITH GRANT OPTION : 사용자가 부여받은 권한을 다른 사용자에게 다시 부여할 수 있는 권한을 부여함
    - 부여 가능한 권한 : UPDATE, DELETE, INSERT, SELECT
- REVOKE
    - 데이터베이스 사용자로부터 사용 권한을 취소함
    - 기본 구조 : REVOKE [GRANT OPTION FOR] 권한 ON 데이터 객체 FROM 사용자 [CASCADE]
    - GRANT OPTION FOR : 다른 사용자에게 권한을 부여할 수 있는 권한을 취소함
    - CASCADE : 권한을 부여받았던 사용자가 다른 사용자에게 부여한 권한도 연쇄 취소함
    - 부여 가능한 권한 : UPDATE, DELETE, INSERT, SELECT
- 트리거(Trigger, 연쇄반응)
    - 일정 작업을 수행할 떄 이에 부수적으로 자동처리되도록 하는 것
    - 삽입, 갱신, 삭제 등의 이벤트가 발생할 떄마다 관련 작업이 자동으로 수행되는 절차형 SQL
    - 종류
        - 행 트리거 : 테이블 안의 영향을 받은 행 각각에 대해 실행됨
            - 변경 전 도는 변경 후의 행은 OLD, NEW라는 가장 줄 변수를 사용해 읽을 수 있음
        - 문장 트리거 : INSERT, UPDATE, DELETE문에 대해 한 번만 실행됨
    - 장점
        - 데이터 무결성 강화(참조 무결성)
        - 업무 규칙의 설정
        - 검사 기능의 확장
    - 단점
        - 유지보수의 어려움
        - 예상치 못한 오류
    - 구성요소 : 선언부(DECLARE), 이벤트부(EVENT), 시작/종료부(BEGIN/END), 제어부(CONTROL), SQL, 예외부(EXCEPTION)
4) 분산 데이터베이스
- 분산 데이터베이스의 개념
    - 네트워크를 통해 연결된 여러 개의 컴퓨터에 데이터가 분산된 데이터베이스
    - 데이터 처리와 비용이 큰 곳에 별도의 데이터베이스 서버를 확충하는 것을 의미
    - 목표
        - 위치 투명성(Location Transparency) : 하드웨어와 소프트웨어의 물리적 위치를 사용자가 알 필요가 없음
        - 중복(복제) 투명성(Replication Transparency) : 사용자에게 통지할 필요 없이 시스템 안에 파일들과 자원들의 부가적인 복사를 자유롭게 할 수 있음
        - 병행 투명성(Concurrency Transparency) : 다중 사용자들이 자원들을 자동으로 공유할 수 있음
        - 장애 투명성(Failure Transparency) : 사용자들은 어느 위치의 시스템에 장애가 발생했는지 알 필요가 없음
    - 구성 요소
        - 분산 처리기 : 지리적으로 분산된 시스템을 통합해 각각의 트랜잭션을 처리함
        - 분산 데이터베이스 : 각 지역에 설치되는 데이터베이스 시스템
        - 통신 네트워크 : 지역적으로 분산된 데이터베이스 시스템을 통신 회선으로 연결
    - 장점
        - 질의 처리 시간의 단축
        - 데이터 공유성, 신뢰성, 가용성 향상
        - 점진적 시스템 용량 확장이 용이
        - 지역 자치성 향상으로 지역 상황에 맞는 시스템 구축이 용이
    - 단점
        - 소프트웨어 개발 비용 증가
        - 오류 발생 가능성 증가
        - 통신망 성능에 따라 전체적인 시스템 성능 저하
        - 하드웨어 구매 비용 증가
- 지역 자치성과 병렬 처리
    - 지역 자치성 : 데이터베이스 중앙 관리자 외에 각 지역에 담당 관리자를 두는 것
    - 병렬 처리 : 하나 이상의 처리를 분산되어 있는 데이터베이스에 분산 처리하여 처리 속도를 높이는 것
--
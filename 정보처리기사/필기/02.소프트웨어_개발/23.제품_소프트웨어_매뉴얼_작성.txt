1) 소프트웨어 매뉴얼
- 소프트웨어 매뉴얼 : 제품 소프트웨어 개발 단계부터 적용한 기준이나 패키징 이후 설치와 사용자 측면의 주요 내용 등을 기록한 문서로 설치 매뉴얼과 사용자 매뉴얼로 구분됨
- 소프트웨어 설치 매뉴얼
    - 소프트웨어 실사용자가 제품을 최초 설치 시 참조하는 매뉴얼
    - 제품 소프트웨어 소개, 설치 파일, 설치 절차 등이 포함됨
    - 설치 과정에서 표시될 수 있는 얘외 상황에 관련 내용을 별도로 구분하여 설명함
    - 설치 시작부터 완료될 때까지의 전 과정을 빠짐없이 순서대로 설명함
    - 설치 매뉴얼은 사용자 기준으로 작성함
    - 설치 매뉴얼에는 목차, 개요, 기본사항 등이 기본적으로 포함되어야함
- 소프트웨어 설치 매뉴얼 구성
    - 목차 및 개요
        - 작성하는 매뉴얼 전체 내용을 순서대로 요약하여 작성함
        - 설치 매뉴얼의 주요 특징, 구성과 설치 방법, 순서 등에 관해 기술함
    - 문서 이력 정보 : 매뉴얼 변경 이력에 대한 정보를 버전별, 시간순으로 작성함
    - 설치 매뉴얼 주석
        - 주의사항 : 사용자가 제품 설치 시 반드시 숙지해야 하는 중요한 정보 주석으로 안내를 작성함
        - 참고 사항 : 설치 관련하여 영향을 미치는 특별한 사용자 환경 및 상황에 대한 내용 주석으로 안내를 작성함
    - 설치 도구의 구성
        - exe/dll/ini/chm 등 해당 설치 관련 파일에 대한 안내를 작성함
        - 폴더 및 설치 프로그램 실행 파일에 대한 안내를 작성함
    - 설치 위치 지정 : 설치 폴더와 설치 프로그램 실행 파일을 설정함
- 소프트웨어 설치 매뉴얼 기본 사항 : 제품 소프트웨어 개요, 설치 관련 파일, 설치 아이콘, 프로그램 삭제 관련 추가 정보
- 소프트웨어 설치 환경 체크 항목 : 사용자 환경, 설치 시 실행 중인 다른 프로그램 종료 확인, 업그레이드 버전 존재 여부 확인, 백업 폴더 확인
- 소프트웨어 설체 매뉴얼 작성 프로세스
    - 기능 식별 : ex) Main Function
    - UI 분류 : ex) 화면 단위 UI
    - 설치 파일/백업 파일 확인 : ex) 실행, 환경, Log, 백업
    - Uninstall 절차 : ex) uninstall.exe 원복 절차
    - 이상 Case 확인 : ex) Case 유형 및 Message
    - 최종 매뉴얼 적용 : ex) Return  값, 정상 Message
2) 소프트웨어 사용자 매뉴얼
- 사용자 매뉴얼
    - 소프트웨어 설치와 사용에 필요한 제반 절차 및 환경 등 전체 내용을 포함하는 매뉴얼을 작성하며, 제품 소프트웨어에 대한 패치 개발과 업그레이드를 위해 버전 관리를 수행함
    - 소프트웨어 사용 방법을 기술하며 패키지의 기능, 패키지의 인터페이스, 포함하고 있는 메소드나 오퍼레이션과 메소드의 파라미터 등의 설명이 포함되어야 함
- 사용자 매뉴얼의 구성
    - 사용자 화면 및 UI
        - 주의 사항 : 사용자가 반드시 숙지해야 하는 중요정보를 작성함
        - 참고 사항 : 특별한 사용자 환경 및 상황에 대한 예외사항을 작성함
    - 주요 기능 분류
        - 설명할 기능을 포함할 화면을 스크린샷하여 작성함
        - 동작하는 기능을 화면의 순서대로 차례로 분류하여 작성함
        - 기능 동작 시 참고 사항, 주의 사항 등을 메모로 추가함
    - 응용 프로그램/설정
        - 제품 실행 시 영향을 받거나 주는 소프트웨어에 대하여 설명함
        - 동작 시 사전에 실행해야 할 소프트웨어가 있다면 기술함
        - 동작에 필요한 기본 설정(Settings)과 기본 설정값을 안내함
    - 장치 연동 : 제품 소프트웨어가 Embedded(장치 내에 저장) 관련된 제품일 경우에 해당 장치에 어떤 것이 있는지와 연동되는 장치에는 무엇이 있는지 설명함
    - Network 환경 : 제품 소프트웨어와 관련한 Network 정보를 표시(Status)하고, Network에 정상 연결되었는지, 이를 위한 관련 설정값은 무엇이 있는지 설명함
    - Profile 설명
        - 제품 소프트웨어 구동 시 체크하는 환경 파일이므로 환겨 ㅇ파일의 경로 변경, 이동을 금지하는 안내를 설명함
        - 구동 시 필요한 필수 파일의 내용 간략히 설명함
    - 고객 지원 방법 : 설치 및 사용에 관련된 기술적 지원을 받을 수 있는 유선, 이메일, 홈페이지 등 정보를 기재함
    - 준수 정보 및 제한 보증
        - 시리얼 코드를 불법 등록 사용하지 못하도록 준수사항을 안내함
        - 저작권자의 지적 재산권, 허가권, 통신 규격, 개발 언어, 연동 프로그램, 문서 효력 등의 정보를 안내함
- 사용자 매뉴얼 작성 프로세스 : 작성 지침 정의->구성 요소 정의->구성 요소별 내용 작성->사용자 매뉴얼 검토
3) 소프트웨어 품질
- 소프트웨어 국제 표준
    - ISO/IEC 9126
        - Information Technology-Software Quality Characteristics and Metrics
        - 소프트웨어 품질 특성과 척도에 관한 지침
        - 고객 관점에서 소프트웨어에 관한 품질 특성과 품질 부 특성을 정의함
        - 1과목 소프트웨어 아키텍처 포인트의 상세 특성과 연계됨
    - ISO/IEC 12119
        - ISO/IEC 9126의 품질 모델을 따르며 패키지 소프트웨어의 일반적인 제품 품질 요구사항 및 테스트를 위한 국제 표준
        - 제품 설명서, 사용자 문서 및 프로그램을 구분하여 각각 품질 요구사항을 규정하고 있음
    - ISO/IEC 15504
        - 소프트웨어 프로세스를 평가하고 개선함으로써 품질 및 생산성을 높이고자 하는 표준
        - 평가 수준에 따라 개발 기관의 능력 레벨을 Incomplete, Performed, Managed Established, Predictable, Optimizing level 등으로 구성됨
    - ISO 9001
        - Quality Systems-Model for Quality Assurance in Design, Development, Production, Installation and Sevicing
        - 설계, 개발, 생산, 설치 및 서비스 과정에 대한 품질 보증 모델
        - 공급자와 구매자 각각의 관리 책임을 명시하고 있으며 운영 중인 품질 시스템이 이 표준에 적합할 경우 품질 인증을 부여할 수 있도록 함
- 소프트웨어 품질 목표(Software Quality and Goals)
    - 운영 특성
        - 정확성(Correctness) : 사용자의 요구 기능을 충족시키는 정도
        - 신뢰성(Reliability) : 주어진 시간 동안 주어진 기능을 오류 없이 수행하는 정도
        - 사용 용이성(Usability)
            - 사용에 필요한 노력을 최소화하고 쉽게 사용할 수 있는 정도
            - 적절한 사용자 인터페이스와 문서를 가지고 있는 정도
        - 효율성(Efficiency) : 명시된 조건하에서 소프트웨어 제품의 일정한 성능과 자원 소요량의 관계에 관한 속성, 즉 요구되는 기능을 수행하기 위해 필요한 자원의 소요 정도
        - 무결성(Integrity) : 허용되지 않는 사용이나 자료의 변경을 제어하는 정도
    -  변경 수용 특성
        - 이식성(Portability) : 다양한 하드웨어 환경에서도 운용 가능하도록 쉽게 수정될 수 있는 정도
        - 상호운용성(Interoperability) : 다른 소프트웨어와 정보를 교환할 수 있는 정도
        - 재사용성(Reusability) : 전체나 일부 소프트웨어를 다른 목적으로 사용할 수 있는가 하는 정도
        - 유지보수성(Maintainability) : 사용자의 기능 변경의 필요성을 만족하기 위하여 소프트웨어를 진화하는 것이 가능한 정도
        - 유연성(Flexibility) : 소프트웨어를 얼마만큼 쉽게 수정할 수 있는가의 정도
        - 시험 역량(Testability) : 의도된 기능을 수행하도록 보장하기 위해 프로그램을 시험할 수 있는 정도
- 소프트웨어 품질 측정 시 관점별 분류
    - 품질의 세부 속성들은 다음과 같이 관계자의 관점에 따라 다름
    - 사용자 관점 : 제품의 신뢰성, 효율성, 사용 용이성, 간결성 등이 있음
    - 개발자 관점 : 검증 가능성, 유지보수성, 이식성, 무결성, 사용성 등이 있음
    - 프로젝트 관리자 관점 : 프로세스의 생산성과 제어 용이성 등이 있음
4) 릴리즈 노트 작성하기
- 릴리즈 노트(Release Note)
    - 애플리케이션 최종 사요자인 고객에게 제공하는 잘 정리된 배포 정보 문서
    - 애플리케이션 릴리즈 노트에는 상세 서비스를 포함하여 수정/변경된 정보를 담고 있는 문서
    - 사용자에게 최종 배포된 릴리즈 노트를 보면 테스트가 어떻게 진행됐는지, 개발팀의 제공 사양을 얼마나 준수했는지를 확인해 볼 수 있음
    - 전체적인 버전 관리 및 릴리즈 정보를 체계적으로 관리할 수 있음
    - 릴리즈 노트는 현재 시제로 개발팀에서 직접 작성하여야 하며, 명확하고 정확하며 완전한 정보를 제공해야 함
    - 개발자와 테스터가 함께 협업해야 하고 최초 및 변경, 개선 항목까지 연결되어 다음 항목에 대한 정보들이 릴리즈 노트를 통해 작성되어야 함
- 릴리즈 노트 작성 항목
    - 헤더(Header) : 문서명, 제품명, 배포 버전 번호, 릴리즈 날짜, 참고 날짜, 문서(릴리즈 노트) 버전 등
    - 개요 : 제품 및 변경에 대한 정볼르 간략하게 작성함
    - 목적 : 제품의 버그 픽스(오류 수정)와 새로운 기능을 포함한 릴리스의 새로운 사항의 나열과 더불어 릴리스 노트의 목적에 대한 간략한 개요를 작성함
    - 이슈 요약 : 문제가 되는 버그의 간단한 설명과 개선사항 항목을 요약하여 작성함
    - 재현 항목 : 버그 발생을 재현하기 위한 절차
    - 수정 및 개선 내용 : 수정 및 개선 내용을 간략하게 서술함
    - 최종 사용자 영향도 : 최종 사용자에게 필요한 조치로, 이 변경사항으로 인해 다른 기능이 영향을 받는지 간략히 서술함
    - 노트 : 소프트웨어 및 하드웨어 설치 항목, 제품, 문서를 포함한 업그레이드 항목을 서술함
    - 면책 조항 : 회사와 표준 제품과 관련된 메시지를 작성함
        - ex) 프리웨어, 불법 복제 금지 등
    - 연락 정도 : 사용자 지원 및 문의 관련한 연락처 정보를 작성함
- ★릴리즈 노트 작성 순서
    - 모듈 식별
        - 모듈 및 빌드 수행 후 릴리즈 노트 기준의 항목을 순서대로 정리함
        - 소스를 통하여 처리되는 입/출력 데이터의 형, 기능 정의, 데이터 흐름을 정리함
        - 메인 함수 이외의 호출 함수를 정의하고 이에 대한 출력값을 식별함
        - ex) I/O 데이터, Function Data Flow
    - 릴리즈 정보 확인
        - 릴리즈 노트 작성을 위해 문서명, 제품명의 릴리즈 기본 정보를 확인함
        - 최초 패키징 버전 작성을 위한 버전 번호, 릴리즈 날짜를 확인함
        - 패키징 시마다 진행 날짜와 릴리즈 노트의 갱신 버전을 확인함
        - 문서 이름(릴리즈 노트 이름), 제품 이름 정보를 확인함
        - ex) 문저/제품명, Ver no, 릴리즈 날짜
    - 릴리즈 노트 개요 작성
        - 빌드 내용에 따라 릴리즈 노트의 개요를 작성함
        - 빌드 이후에 제품 및 패키징에 대해 간략히 메모함
        - 빌드 이후의 패키징본에 대한 결과를 기록함
        - 보전 번호 내용, 버전 관리 사항 등을 릴리즈 노트에 기록함
        - ex) 제품/변경 노트, Ver/Configure info
    - 영향도 체크
        - 이슈, 버그 및 추가 영향도를 점검하여 기술함
        - 발생한 버그의 설명, 개선한 릴리즈 항목을 기술함
        - 버그 발견을 위한 재현 테스트 및 재현 환경을 기술함
        - 이슈, 버그 발생에 따른 영향도를 상세하기 기술함
        - ex) 트러블 이슈, 버그 발견
    - 정식 릴리즈 노트 작성
        - 릴리즈 정보, 헤더 및 개요 등 기본사항을 기술함
        - 정식 버전을 기준으로 릴리즈 노트의 개요를 기술함
        - 이슈, 버그 등 개선 내용을 상세하기 기술함
        - ex) 릴리즈 정보, 헤더 및 개요
    - 추가 개선 항목 식별
        - 추가 개선에 따른 추가 항목을 식별하여 릴리즈 노트를 작성함
        - 추가 개선에 대한 베타 버전을 이용 테스트 수행함
        - 테스트 중 발생한 긴급 버그를 수정함
        - 추가 기능 향상을 위해 작은 기능을 수정함
        - 사용자 요청에 따른 추가 개선을 계획하고 수정함
        - ex) 베타 버전, 긴급 버그, 사용자 요청